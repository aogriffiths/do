{
	"version": "https://jsonfeed.org/version/1.1",
	"title": "Do",
	"language": "en",
	"home_page_url": "https://aogriffiths.github.io/eleventy-base-blog/do/",
	"feed_url": "https://aogriffiths.github.io/eleventy-base-blog/feed/feed.json",
	"description": "Writing about things I do",
	"author": {
		"name": "Adam Griffiths",
		"url": "https://github.com/aogriffiths"
	},
	"items": [
		{
			"id": "https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/rock4se_build_1_bsp/",
			"url": "https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/rock4se_build_1_bsp/",
			"title": "Rock4 SE custom OS, the old way",
			"content_html": "<p>The official Rock 4 SE Debian 11 (Buster) image does not have AppArmor enabled To create a custom image we will use the <a href=\"https://github.com/radxa/rockchip-bsp\">Radxa Board Support Package</a> (BSP).</p>\n<p>Take the following steps on machine of your choice, they should be  adaptable to work on a Windows, Mac or Linux machine, but have only been tested on a Mac.</p>\n<h2 id=\"steps\" tabindex=\"-1\">Steps <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/rock4se_build_1_bsp/\">#</a></h2>\n<ol>\n<li>\n<p><strong>Install dependencies</strong></p>\n<p>Install the following on a raw machine (Tested on an Intel Mac, should be adaptable for Linux, not tested on Windows)</p>\n<ul>\n<li>\n<p><strong>Docker</strong>: See <a href=\"https://docs.docker.com/get-docker/\">get-docker</a>.</p>\n</li>\n<li>\n<p><strong>Git</strong>: Follow suitable install instructions for your host OS (e.g. on a mac <code>brew install git</code>)</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Clone the Radxa Board Support Package (BSP)</strong></p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> ./ <span class=\"token comment\"># choose a working directory that suits you</span><br><span class=\"token function\">git</span> clone <span class=\"token parameter variable\">-b</span> master https://github.com/radxa/rockchip-bsp.git<br><span class=\"token builtin class-name\">cd</span> rockchip-bsp</code></pre>\n</li>\n<li>\n<p><strong>Create a Docker container</strong></p>\n<p>A docker container will be used for building the board SD card image. You can create a docker image from the Dockerfile contained in the rockchip-bsp, but first you need to edit it to make some changes (if you are building on a arm machine) and fixes:</p>\n<ul>\n<li>\n<p>Open the docker file</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">open</span> ./docker/Dockerfile </code></pre>\n</li>\n<li>\n<p>Comment out all lines that contain <code>RUN echo &quot;deb http://mirrors.tuna...</code></p>\n</li>\n<li>\n<p>add <code>u-boot-tools</code> (The kernel build later is dependent on mkimage from u-boot-tools, but unfortunately the Dockerfile provided doesn't include it.</p>\n</li>\n</ul>\n<p>You can then build and tag the image with</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">docker</span> build <span class=\"token parameter variable\">-t</span> rockchip-radxa:1 <span class=\"token parameter variable\">-f</span> ./docker/Dockerfile <span class=\"token builtin class-name\">.</span>  <br><span class=\"token function\">docker</span> tag rockchip-radxa:1 rockchip-radxa:latest</code></pre>\n<p>If you're using a Mac with Apple silicon you'll need to emulate x86/amd64 (there are x86 dependencies in many places in the build process, kind of crazy given it's cross compiling back to arm but anyway...)</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">docker</span> build <span class=\"token parameter variable\">--platform</span> linux/amd64 <span class=\"token parameter variable\">-t</span> rockchip-radxa:1 <span class=\"token parameter variable\">-f</span> ./docker/Dockerfile <span class=\"token builtin class-name\">.</span>  <br><span class=\"token function\">docker</span> tag <span class=\"token parameter variable\">--platform</span> linux/amd64 rockchip-radxa:1 rockchip-radxa:latest</code></pre>\n</li>\n<li>\n<p>Start a container</p>\n<p>Now start a Container using this image. The BSP documentation suggests bind mounting the source code (which you cloned in step 1) into the container (e.g. <code>docker run --privileged -it -v /home/jack/rockchip-bsp:/root ...</code>). However this can run in to issues with differing operating systems (e.g. file name case sensitivity) so it's safer to create new a volume for the source code:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">docker</span> volume create rockchip-bsp</code></pre>\n<p>Then, start the docker container with:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-it</span> <span class=\"token parameter variable\">--rm</span> <span class=\"token parameter variable\">-v</span> <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token builtin class-name\">pwd</span><span class=\"token variable\">`</span></span>:/root/host <span class=\"token parameter variable\">--mount</span> <span class=\"token assign-left variable\">source</span><span class=\"token operator\">=</span>rockchip-bsp,target<span class=\"token operator\">=</span>/root/rockchip-bsp rockchip-radxa /bin/bash</code></pre>\n<p>Or on an Mac with Apple silicon do the following (this will make the build slooow but it's the easiest way on a Mac or arm machine):</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">--platform</span> linux/amd64 <span class=\"token parameter variable\">-it</span> <span class=\"token parameter variable\">--rm</span> <span class=\"token parameter variable\">-v</span> <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token builtin class-name\">pwd</span><span class=\"token variable\">`</span></span>:/root/host <span class=\"token parameter variable\">--mount</span> <span class=\"token assign-left variable\">source</span><span class=\"token operator\">=</span>rockchip-bsp,target<span class=\"token operator\">=</span>/root/rockchip-bsp rockchip-radxa /bin/bash</code></pre>\n<p>The options here are:</p>\n<ul>\n<li>\n<p><code>run</code> and <code>/bin/bash</code> start the container with a bash shell</p>\n</li>\n<li>\n<p><code>-it</code> make is an interactive terminal</p>\n</li>\n<li>\n<p><code>-v ...</code> maps the current working director of the host machine to the container, so you can copy files out</p>\n</li>\n<li>\n<p><code>--mount ...</code> maps the docker volume create earlier to the container, to keep the source code, and complied out in</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Update the BSP submodules</strong></p>\n<p>Now you have shell in the docker container, clone the BSP in the <code>/root/rockchip-bsp</code> directory (which is where the volume created earlier is mounted) and checkout the submodules with:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> /root/rockchip-bsp<br><span class=\"token function\">git</span> clone <span class=\"token parameter variable\">-b</span> master https://github.com/radxa/rockchip-bsp.git ./<br><span class=\"token function\">git</span> submodule init<br><span class=\"token function\">git</span> submodule update </code></pre>\n<p>This may take some time; it's over 6Gb to download. (The linux kernel, led by Linus Torvalds, is one of the largest git repositories out there. Linus also led the development of git itself)</p>\n</li>\n<li>\n<p><strong>Configure the kernel</strong></p>\n<p>The kernel in the BSP is currently based on linux 4.19. The next step is where you can enable AppArmor, and make any other kernal configurations you like:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> kernel<br><span class=\"token function\">make</span> rockchip_linux_defconfig<br><span class=\"token function\">make</span> menuconfig</code></pre>\n<p>Use the menu to goto:</p>\n<ol>\n<li>Security options (space)</li>\n<li>Enable different security models (space)</li>\n<li>AppArmor support (space to select)</li>\n<li>Exit</li>\n<li>Exit</li>\n<li>Yes (to save)</li>\n</ol>\n<p>Then save the config:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">make</span> savedefconfig<br><span class=\"token function\">cp</span> defconfig arch/arm64/configs/rockchip_linux_defconfig<br><span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span></code></pre>\n</li>\n<li>\n<p>Compile the kernel</p>\n<p>If you are on a x86 machine you will need to cross compile, which is done by setting two environment variables.</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">ARCH</span><span class=\"token operator\">=</span>arm64<br><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">CROSS_COMPILE</span><span class=\"token operator\">=</span>aarch64-linux-gnu-</code></pre>\n<p>Then compile with:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\">./build/mk-kernel.sh rk3399-rock-pi-4b  </code></pre>\n<p>The generated image and device tree blob (dtb) is copied to the <code>out/kernel</code> directory. To see them:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">ls</span> out/kernel/</code></pre>\n<p>To pack the kernel in deb packages run:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\">./build/pack-kernel.sh <span class=\"token parameter variable\">-d</span> rockchip_linux_defconfig <span class=\"token parameter variable\">-r</span> <span class=\"token number\">1</span> </code></pre>\n<p>The generated packages will be copied to <code>out/packages</code> directory:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">ls</span> out/packages/</code></pre>\n<p>The copy them all excdpt the <code>dbg</code> and <code>libc</code> packages:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>GLOBIGNORE<span class=\"token operator\">=</span><span class=\"token string\">\"*dbg*:*libc*\"</span><span class=\"token punctuation\">;</span> <span class=\"token function\">cp</span> out/packages/*.deb /root/host<span class=\"token punctuation\">)</span></code></pre>\n</li>\n<li>\n<p><strong>Build u-boot</strong></p>\n<p>For ROCK Pi 4 Model B or ROCK 4 SE use <code>rk3399-rock-pi-4b</code>. (The README is out of date on this step it suggests using <code>rockpi4b</code>, but you can see the correct board names to use in the <code>build/board_configs.sh</code> file.)</p>\n<p>Run:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\">./build/mk-uboot.sh rk3399-rock-pi-4b  </code></pre>\n<p>The generated images are copied to the <code>out/u-boot</code> directory. To see them:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">ls</span> out/u-boot/</code></pre>\n</li>\n<li>\n<p><strong>Make a Debian rootfs image</strong></p>\n<p>The scripts in <code>rootfs</code> create a debian system using <code>lb</code> (from live-build, the Debian Live tool suite). Run the following:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> ./rootfs<br><br><span class=\"token comment\"># ignore the missing dependencies in the next step</span><br>dpkg <span class=\"token parameter variable\">-i</span> ubuntu-build-service/packages/*  <br><br><span class=\"token comment\"># The next step fixes the dependencies</span><br><span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-f</span>                       <br><br><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">RELEASE</span><span class=\"token operator\">=</span>buster <br><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">TARGET</span><span class=\"token operator\">=</span>desktop <br><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">ARCH</span><span class=\"token operator\">=</span>arm64<br><br>./mk-base-debian.sh<br>./mk-rootfs-buster.sh<br>./mk-image.sh<br></code></pre>\n<p>The environment variables are self explanatory (a Debian 11 / buster, desktop build for arm64). The scripts do the following:</p>\n<ul>\n<li>\n<p><code>mk-base-debian.sh</code> make a base Debian image (using live build)</p>\n</li>\n<li>\n<p><code>mk-rootfs-buster.sh</code> unpacks the image and merges it with packages and custom firmware for the Rock 4</p>\n</li>\n<li>\n<p><code>mk-image.sh</code> packages it all up again in an ext4 formatted image named <code>linaro-rootfs.img</code>.</p>\n</li>\n</ul>\n<p>To see the output and return to the top level BSP directory.</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">ls</span><br><span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span></code></pre>\n</li>\n<li>\n<p><strong>Create a single image</strong></p>\n<p>Combine the separate u-boot, linux kernel, and debian rootfs images into a single image with a GPT partition table:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\">build/mk-image.sh <span class=\"token parameter variable\">-c</span> rk3399 <span class=\"token parameter variable\">-b</span> rockpi4 <span class=\"token parameter variable\">-t</span> system <span class=\"token parameter variable\">-r</span> rootfs/linaro-rootfs.img</code></pre>\n<p>The result is:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\">out/system.img</code></pre>\n<p>To copy this to your host computer run:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">cp</span> out/system.img /root/host/</code></pre>\n</li>\n<li>\n<p><strong>Flash the SD card</strong></p>\n<p>The final step is to flash <code>system.img</code> to an SD card. Balena Etcher is a good choice for this.</p>\n</li>\n</ol>\n<h2 id=\"references\" tabindex=\"-1\">References <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/rock4se_build_1_bsp/\">#</a></h2>\n<ul>\n<li>https://wiki.radxa.com/Rock3/dev/Debian</li>\n<li>https://wiki.radxa.com/Rockpi4/dev/Debian</li>\n<li>https://github.com/radxa/rockchip-bsp</li>\n</ul>\n",
			"date_published": "2023-04-25T00:00:00Z"
		}
		,
		{
			"id": "https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/rock4se_build_1_bsp/arm_build/",
			"url": "https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/rock4se_build_1_bsp/arm_build/",
			"title": "Rock4 SE custom OS, the old way + arm",
			"content_html": "<p>THESE INSTRUCTIONS DO NOT WORK. They go a long way to working and are shared her ein case it's ever interesting to anyone.</p>\n<p>The official Rock 4 SE Debian 11 (Buster) image does not have AppArmor enabled, which Home Assistant requires. To create a custom image we will use the <a href=\"https://github.com/radxa/rockchip-bsp\">Radxa Board Support Package</a> (BSP).</p>\n<p>Take the following steps on machine of your choice, they should be  adaptable to work on a Windows, Mac or Linux machine, but have only been tested on an intel Mac.</p>\n<h2 id=\"steps\" tabindex=\"-1\">Steps <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/rock4se_build_1_bsp/arm_build/\">#</a></h2>\n<ol>\n<li>\n<p><strong>Install dependencies</strong></p>\n<p>Install the following on a raw machine (Tested on an Intel Mac, should be adaptable for Linux, not tested on Windows)</p>\n<ul>\n<li>\n<p><strong>Docker</strong>: See <a href=\"https://docs.docker.com/get-docker/\">get-docker</a>.</p>\n</li>\n<li>\n<p><strong>Git</strong>: Follow suitable install instructions for your host OS (e.g. on a mac <code>brew install git</code>)</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Clone the Radxa Board Support Package (BSP)</strong></p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> ./ <span class=\"token comment\"># choose a working directory that suits you</span><br><span class=\"token function\">git</span> clone <span class=\"token parameter variable\">-b</span> master https://github.com/radxa/rockchip-bsp.git<br><span class=\"token builtin class-name\">cd</span> rockchip-bsp</code></pre>\n</li>\n<li>\n<p><strong>Create a Docker container</strong></p>\n<p>A docker container will be used for building the board SD card image. You can create a docker image from the Dockerfile contained in the rockchip-bsp, but first you need to edit it to make some changes (if you are building on a arm machine) and fixes:</p>\n<ul>\n<li>\n<p>Open the docker file</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">open</span> ./docker/Dockerfile </code></pre>\n</li>\n<li>\n<p>Comment out all lines that contain <code>RUN echo &quot;deb http://mirrors.tuna...</code></p>\n</li>\n<li>\n<p>If you are using an arm machine (as oppose to x86) comment out the cross compiler packages:</p>\n<ul>\n<li>crossbuild-essential-arm64</li>\n<li>gcc-aarch64-linux-gnu</li>\n</ul>\n</li>\n<li>\n<p>add <code>u-boot-tools</code> (The kernel build later is dependent on mkimage from u-boot-tools, but unfortunately the Dockerfile provided doesn't include it.</p>\n</li>\n</ul>\n<p>You can then build and tag the image with</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">docker</span> build <span class=\"token parameter variable\">-t</span> rockchip-radxa:1 <span class=\"token parameter variable\">-f</span> ./docker/Dockerfile <span class=\"token builtin class-name\">.</span>  <br><span class=\"token function\">docker</span> tag rockchip-radxa:1 rockchip-radxa:latest</code></pre>\n</li>\n<li>\n<p>Start a container</p>\n<p>Now start a Containe rusing this image. The BSP documentation suggests bind mounting the source code (which you cloned in step 1) into the container (e.g. <code>docker run --privileged -it -v /home/jack/rockchip-bsp:/root ...</code>). However this can run in to issues with differing operating systems (e.g. file name case sensitivity) so it's safer to create new a volume for the source code:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">docker</span> volume create rockchip-bsp</code></pre>\n<p>Then, start the docker container with:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-it</span> <span class=\"token parameter variable\">--rm</span> <span class=\"token parameter variable\">-v</span> <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token builtin class-name\">pwd</span><span class=\"token variable\">`</span></span>:/root/host <span class=\"token parameter variable\">--mount</span> <span class=\"token assign-left variable\">source</span><span class=\"token operator\">=</span>rockchip-bsp,target<span class=\"token operator\">=</span>/root/rockchip-bsp rockchip-radxa /bin/bash</code></pre>\n<p>The options here are:</p>\n<ul>\n<li>\n<p><code>run</code> and <code>/bin/bash</code> start the container with a bash shell</p>\n</li>\n<li>\n<p><code>-it</code> make is an interactive terminal</p>\n</li>\n<li>\n<p><code>-v ...</code> maps the current working director of the host machine to the container, so you can copy files out</p>\n</li>\n<li>\n<p><code>--mount ...</code> maps the docker volume create earlier to the container, to keep the source code, and complied out in</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Update the BSP submodules</strong></p>\n<p>Now you have shell in the docker container, clone the BSP in the <code>/root/rockchip-bsp</code> directory (which is where the volume created earlier is mounted) and checkout the submodules with:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> /root/rockchip-bsp<br><span class=\"token function\">git</span> clone <span class=\"token parameter variable\">-b</span> master https://github.com/radxa/rockchip-bsp.git ./<br><span class=\"token function\">git</span> submodule init<br><span class=\"token function\">git</span> submodule update </code></pre>\n<p>This may take some time; it's over 6Gb to download. (The linux kernel, led by Linus Torvalds, is one of the largest git repositories out there. Linus also led the development of git itself)</p>\n</li>\n<li>\n<p><strong>Configure the kernel</strong></p>\n<p>The kernel in the BSP is currently based on linux 4.19. The next step is where you can enable AppArmor, and make any other kernal configurations you like:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> kernel<br><span class=\"token function\">make</span> rockchip_linux_defconfig<br><span class=\"token function\">make</span> menuconfig</code></pre>\n<p>Use the menu to goto:</p>\n<ol>\n<li>Security options (space)</li>\n<li>Enable different security models (space)</li>\n<li>AppArmor support (space to select)</li>\n<li>Exit</li>\n<li>Exit</li>\n<li>Yes (to save)</li>\n</ol>\n<p>Then save the config:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">make</span> savedefconfig<br><span class=\"token function\">cp</span> defconfig arch/arm64/configs/rockchip_linux_defconfig<br><span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span></code></pre>\n</li>\n<li>\n<p>Compile the kernel</p>\n<p>If you are on a x86 machine you will need to cross compile, which is done by setting two environment variables.</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">ARCH</span><span class=\"token operator\">=</span>arm64<br><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">CROSS_COMPILE</span><span class=\"token operator\">=</span>aarch64-linux-gnu-</code></pre>\n<p>Then compile with:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span><br>./build/mk-kernel.sh rk3399-rock-pi-4b  </code></pre>\n<p>The generated image and device tree blob (dtb) is copied to the <code>out/kernel</code> directory. To see them:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">ls</span> out/kernel/</code></pre>\n<p>To pack the kernel in deb packages run:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\">./build/pack-kernel.sh <span class=\"token parameter variable\">-d</span> rockchip_linux_defconfig <span class=\"token parameter variable\">-r</span> <span class=\"token number\">1</span> </code></pre>\n<p>The generated packages will be copied to <code>out/packages</code> directory:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">ls</span> out/packages/</code></pre>\n<p>The copy them all excdpt the <code>dbg</code> and <code>libc</code> packages:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>GLOBIGNORE<span class=\"token operator\">=</span><span class=\"token string\">\"*dbg*:*libc*\"</span><span class=\"token punctuation\">;</span> <span class=\"token function\">cp</span> out/packages/*.deb /root/host<span class=\"token punctuation\">)</span></code></pre>\n</li>\n<li>\n<p><strong>Build u-boot</strong></p>\n<p>For ROCK Pi 4 Model B or ROCK 4 SE use <code>rk3399-rock-pi-4b</code>. (The README is out of date on this step it suggests using <code>rockpi4b</code>, but you can see the correct board names to use in the <code>build/board_configs.sh</code> file.)</p>\n<p>Run:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\">./build/mk-uboot.sh rk3399-rock-pi-4b  </code></pre>\n<p>if you get the error <code>qemu-x86_64: Could not open '/lib64/ld-linux-x86-64.so.2': No such file or directory</code></p>\n<p>comment out <code>export CROSS_COMPILE</code> in:</p>\n<ol>\n<li>top of <code>build/board_configs.sh</code></li>\n<li>top of  <code>build/mk-uboot.sh</code></li>\n<li><code>rk3399-rock-pi-4b</code> section of <code>build/mk-uboot.sh</code></li>\n</ol>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">find</span> ./ <span class=\"token parameter variable\">-type</span> f <span class=\"token parameter variable\">-name</span> <span class=\"token string\">'*.sh'</span> <span class=\"token parameter variable\">-exec</span> <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s,export CROSS,\\#export CROSS,gI'</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">;</span></code></pre>\n<p>``\ngit clone x\ncd x\nsudo apt-get install libsdl1.2-dev\nsudo apt-get install python3-setuptools\nmake tools-only_defconfig</p>\n<pre><code>\nThe generated images are copied to the `out/u-boot` directory. To see them:\n```bash\nls out/u-boot/\n</code></pre>\n</li>\n<li>\n<p><strong>Make a Debian rootfs image</strong></p>\n<p>The scripts in <code>rootfs</code> create a debian system using <code>lb</code> (from live-build, the Debian Live tool suite). They are packaged in the BSP with all the correct configuration except one thing, they are configured to use a chinese mirror which is great if you live in China, and slow if you do not, so slow in fact yur build might timeout. Use <code>sed</code> to replace the mirrors:</p>\n<p><strong>First, the Debian Security Mirror</strong></p>\n<ul>\n<li>from: <code>https://mirrors.tuna.tsinghua.edu.cn/debian-security</code></li>\n<li>to: <code>https://security.debian.org/debian-security</code></li>\n</ul>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">find</span> ./ <span class=\"token parameter variable\">-type</span> f <span class=\"token parameter variable\">-name</span> configure <span class=\"token parameter variable\">-exec</span> <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s,https://mirrors.tuna.tsinghua.edu.cn/debian-security,https://security.debian.org/debian-security,gI'</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">;</span></code></pre>\n<p><strong>Second, the Debian Mirror</strong></p>\n<ul>\n<li>from: <code>https://mirrors.tuna.tsinghua.edu.cn/debian</code></li>\n<li>to: <code>http://ftp.uk.debian.org/debian</code></li>\n</ul>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">find</span> ./ <span class=\"token parameter variable\">-type</span> f <span class=\"token parameter variable\">-name</span> configure <span class=\"token parameter variable\">-exec</span> <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s,https://mirrors.tuna.tsinghua.edu.cn/debian,http://ftp.uk.debian.org/debian,gI'</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Then run the following:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> ./rootfs<br><br><span class=\"token comment\"># ignore the missing dependencies in the next step</span><br>dpkg <span class=\"token parameter variable\">-i</span> ubuntu-build-service/packages/*  <br><br><span class=\"token comment\"># The next step fixes the dependencies</span><br><span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-f</span>                       <br><br><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">RELEASE</span><span class=\"token operator\">=</span>buster <br><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">TARGET</span><span class=\"token operator\">=</span>desktop <br><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">ARCH</span><span class=\"token operator\">=</span>arm64<br><br>./mk-base-debian.sh<br>./mk-rootfs-buster.sh<br>./mk-image.sh<br></code></pre>\n<p>The environment variables are self explanatory (a Debian 11 / buster, desktop build for arm64). The scripts do the following:</p>\n<ul>\n<li>\n<p><code>mk-base-debian.sh</code> make a base Debian image (using live build)</p>\n</li>\n<li>\n<p><code>mk-rootfs-buster.sh</code> unpacks the image and merges it with packages and custom firmware for the Rock 4</p>\n</li>\n<li>\n<p><code>mk-image.sh</code> packages it all up again in an ext4 formatted image named <code>linaro-rootfs.img</code>.</p>\n</li>\n</ul>\n<p>To see the output and return to the top level BSP directory.</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">ls</span><br><span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span></code></pre>\n</li>\n<li>\n<p><strong>Create a single image</strong></p>\n<p>Combine the separate u-boot, linux kernel, and debian rootfs images into a single image with a GPT partition table:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\">build/mk-image.sh <span class=\"token parameter variable\">-c</span> rk3399 <span class=\"token parameter variable\">-b</span> rockpi4 <span class=\"token parameter variable\">-t</span> system <span class=\"token parameter variable\">-r</span> rootfs/linaro-rootfs.img</code></pre>\n<p>The result is:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\">out/system.img</code></pre>\n<p>To copy this to your host computer run:</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">cp</span> out/system.img /root/host/</code></pre>\n</li>\n<li>\n<p><strong>Flash the SD card</strong></p>\n<p>The final step is to flash <code>system.img</code> to an SD card. Balena Etcher is a good choice for this.</p>\n</li>\n</ol>\n<h2 id=\"references\" tabindex=\"-1\">References <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/rock4se_build_1_bsp/arm_build/\">#</a></h2>\n<ul>\n<li>https://wiki.radxa.com/Rock3/dev/Debian</li>\n<li>https://wiki.radxa.com/Rockpi4/dev/Debian</li>\n<li>https://github.com/radxa/rockchip-bsp</li>\n</ul>\n",
			"date_published": "2023-04-25T00:00:00Z"
		}
		,
		{
			"id": "https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/video/",
			"url": "https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/video/",
			"title": "",
			"content_html": "<p>Coxles four\nhttps://www.youtube.com/watch?v=r7Qe3e2rb0U</p>\n<p>Options\n2:20-2:35 - from above\n2:46-2:50 - side close up\n3:12-3:17 - side close up moving\n3:36-3:40 - side / backgournd not ideal\n3:52-3:58 - side / fairly good background\n4:26-4:32 - above side on (stationary camera)\n5:05-5:08 - My final chocie\n5:20-5:24 - My original choice but image was too small and blurly in the end</p>\n<p>Download some of the rounding video e.g. 5:10-5:25</p>\n<pre><code>ffmpeg -y -i original.webm  -vf &quot;drawtext=text='%{n}. %{pts\\:hms}':fontsize=32:fontcolor=white:box=1:boxborderw=6:boxcolor=black@0.75:x=(w-text_w)/2:y=h-text_h-20, drawgrid=w=iw/16:h=ih/12:t=1:c=white@0.5&quot; -g 1 -c:a copy  step1_timestamped.mp4\nffplay  step1_timestamped.mp4\n</code></pre>\n<p>Open in the vlc media player and use the hotkeys:</p>\n<p>ffplay</p>\n<p>left arrow ...... 10 seconds backwards\nright arrow ..... 10 seconds forward\nup arrow ........  1 minute  backwards\ndown arrow ......  1 minute  forwards\npage down ....... 10 minutes backwards\npage up ......... 10 minutes forward\ns ............... Step to the next frame</p>\n<p>Find the exact start and finish of the clip you want</p>\n<p>Start of stroke\n153. 00:00:08.446 &lt; read for catch\n154. 00:00:08.486\n155. 00:00:08.526 &lt; touches water\n156. 00:00:08.566</p>\n<p>End of stroke\n189. 00:00:09.886\n190. 00:00:09.926\n191. 00:00:09.966 &lt; touches water\n192. 00:00:10.006</p>\n<p>So we want 00:00:08.526 to 00:00:09.926, which is 00:00:08.566 for 00:00:01.4</p>\n<ol start=\"3\">\n<li>STEP 3\n=========\nNext lets crop to the area of interest, the grid lines help here 11 horizontal, 7 vertical 3x3</li>\n</ol>\n<pre><code>VIDEOSS=00:00:08.526\nVIDEOT=00:00:01.44\nSHIFT=6\nffmpeg -y -i original.webm -i original.webm  -ss $VIDEOSS -t $VIDEOT -filter_complex &quot;crop=iw*3/16:ih*3/12:iw*11/16:ih*7/12, [0:v]overlay=0:100+t*$SHIFT, drawgrid=w=iw/16:h=ih/12:t=1:c=white@0.5&quot; -c:a copy  test2.mp4\nffplay -loop 0 test2.mp4\n</code></pre>\n<p>playing arround with that (luckly all I reall needed was to adjust the <code>7.4</code> in <code>t*7.4</code>)</p>\n<pre><code>ffmpeg -y -i original.webm -i original.webm  -ss $VIDEOSS -t $VIDEOT -filter_complex &quot;crop=iw*3/16:ih*3/12:iw*11/16:ih*7/12, [0:v]overlay=0:100+t*7.4, drawbox=x=30:y=185:w=50:h=50:c=red&quot; -c:a copy  test2.mp4\nffplay -loop 0 test2.mp4\n</code></pre>\n<h1 id=\"4-step-4\" tabindex=\"-1\">4 STEP 4 <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/video/\">#</a></h1>\n<p>to crop it:</p>\n<pre><code>ffmpeg -y -i original.webm -i original.webm  -ss $VIDEOSS -t $VIDEOT -filter_complex &quot;crop=iw*3/16:ih*3/12:iw*11/16:ih*7/12, [0:v]overlay=0:100+t*$SHIFT, boxblur=1, histeq, crop=x=30:y=175:w=50:h=50, vignette=a=0.1&quot; -c:a copy  test2.mp4\n</code></pre>\n<ol start=\"5\">\n<li>STEP 5\n=========\nto get a 16x16</li>\n</ol>\n<pre><code>ffmpeg -y -i original.webm -i original.webm  -ss $VIDEOSS -t $VIDEOT -filter_complex &quot;crop=iw*3/16:ih*3/12:iw*11/16:ih*7/12, [0:v]overlay=0:100+t*$SHIFT, histeq, crop=x=30:y=175:w=50:h=50, vignette=a=0.1, scale=16:16&quot; -c:a copy  out.gif\n</code></pre>\n<p>scale=320:240</p>\n<p>=============</p>\n<p>The example here is a video of Steve Redgrave's record-breaking fifth gold medal at the Sydney 2000 Olypics see <a href=\"https://www.youtube.com/watch?v=r7Qe3e2rb0U\">here</a>. The second from 2:38 to 2:54 gives a reasonable quality close up without too much camera vibration or movement to contend with.</p>\n<h2 id=\"1-get-a-clip-from-the-original-footage\" tabindex=\"-1\">1. Get a clip from the original footage <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/video/\">#</a></h2>\n<p>Downloading the full video will take time, you can get a small part using <code>yt-dlp</code> and postprocessor arguments. Add a good margin arround the section of the clip you want to be sure to get a keyframe preceeding it.</p>\n<pre><code>VIDEOURL=https://www.youtube.com/watch?v=r7Qe3e2rb0U\nVIDEOSS=00:02:30.00\nVIDEOT=00:00:20.00\n\nyt-dlp --postprocessor-args &quot;-ss $VIDEOSS -t $VIDEOT&quot; $VIDEOURL --force-overwrites -o &quot;step1_original.%(ext)s&quot;\n</code></pre>\n<h2 id=\"2-inspect\" tabindex=\"-1\">2. Inspect <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/video/\">#</a></h2>\n<p>To inspect the clip, and choose the exact frames you need, create a copy with a grid and timestamps.</p>\n<pre><code>ffmpeg -i step1_original.webm -y -c:a copy -vf &quot;\\\ndrawtext=text='%{n}. %{pts\\:hms}'\\\n:fontsize=32:fontcolor=white\\\n:box=1:boxborderw=6:boxcolor=black@0.75\\\n:x=(w-text_w)/2:y=h-text_h-20, \\\ndrawgrid=w=100:h=100:t=1:c=white@0.5&quot; \\\nstep2_timestamped.mp4\n\nffplay  step2_timestamped.mp4\n</code></pre>\n<ul>\n<li><code>-i</code> - input file</li>\n<li><code>-y</code> -  overwrite output without asking</li>\n<li><code>-c:a copy</code> - copy the audio</li>\n<li><code>-vf</code>   filter the video withthe follwing filtergraph:\n<ul>\n<li><code>drawtext</code> - add the frame number and timestamp to the output, with <code>fontsize fontcolor</code> for white 32pt, <code>box boxborderw boxcolor</code> for a 75% trasnparent box with 6px border, <code>x y</code> for tghe start position of the text (using <code>w</code>, <code>h</code>, <code>test_W</code> &amp; <code>:text h</code> parameters to center the text at the bottom)</li>\n<li><code>drawgrid</code> - add a 100x100, 1px thick, 50% trasnparent white grid.</li>\n</ul>\n</li>\n<li><code>step2_timestamped.mp4</code> the output</li>\n</ul>\n<p>Note: the frame numbers are based on <code>step1_original.webm</code> so to reference a frame it needs to be based on that as the imput file. For example to select a single frame:</p>\n<pre><code>FRAMENUMBER=214\nffmpeg -i step1_original.webm -y -vframes 1 -vf &quot;\\\ndrawtext=text='%{n}. %{pts\\:hms}'\\\n:fontsize=32:fontcolor=white\\\n:box=1:boxborderw=6:boxcolor=black@0.75\\\n:x=(w-text_w)/2:y=h-text_h-20, \\\ndrawgrid=w=100:h=100:t=1:c=white@0.5, \\\nselect=eq(n\\,$FRAMENUMBER)&quot; \\\nstep2_timestamped.png\n</code></pre>\n<p>Which uses the <code>-vframes 1</code> option and the <code>select=eq(n\\,$FRAMENUMBER)</code> filter.</p>\n<p><a href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/video/step2_timestamped.mp4\"><img src=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/video/step2_timestamped.png\" alt=\"step2_timestamped.mp4\"></a></p>\n<p>To control the playback with ffplay use:</p>\n<pre><code>left arrow ...... 10 seconds backwardss\nright arrow ..... 10 seconds forward\nup arrow ........  1 minute  backwards\ndown arrow ......  1 minute  forwards\npage down ....... 10 minutes backwards\npage up ......... 10 minutes forward\ns ............... Step to the next frame\n</code></pre>\n<p>You can see frame 138 to 175 inclusive creates a loop of 38 frames represeting 1.52s of time (the elapsed time between frames 137 and 175 is 10.606 - 9.086 = 1.52s).</p>\n<ul>\n<li><code>137. 00:00:09.086</code> Blades (oars) comming down, just above the water</li>\n<li><code>138. 00:00:09.126</code> Blades touch the water</li>\n<li><code>...</code></li>\n<li><code>175. 00:00:10.606</code> Blades just above the water</li>\n<li><code>176. 00:00:10.646</code> Blades touch the water</li>\n</ul>\n<blockquote>\n<p><em><strong>Side note:</strong></em> This maths shows a rate of 39.5 stokes per minute for the crew (60 / 1.52 = 39.5). However, the BBC commertary of the event quoted 36 - 38 stokes per miniute for the British at this part of the race. There could be several factors leading to the discrepancy but the crew was steadily increasing their rate at the time and it in all likelyhood they were one step ahead of the comentary.</p>\n</blockquote>\n<h2 id=\"3-trim-the-clip\" tabindex=\"-1\">3. Trim the clip <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/video/\">#</a></h2>\n<p>You may notice there is a lag in the video starting when playing <code>step2_timestamped.mp4</code>. This is becuase the playback requires a keyframe before the video can be rendered.</p>\n<p>So, 10 to 47</p>\n<pre><code>VIDEOSS=00:00:04.086\nVIDEOT=00:00:01.52\nW=9\nH=9\nX=12\nY=3\nSX=-29\nSY=-7\nOLX=50\nOLY=50\n\n#x 1/4, y 3/4\n\nffmpeg -y -i original.webm -i original.webm  -ss $VIDEOSS -t $VIDEOT -filter_complex &quot;\\\ncrop=x=ih*$X/16:y=ih*$Y/16:w=ih*$W/16:h=ih*$H/16, \\\n[0:v]overlay=$OLX-$SX+t*$SX:$OLY-$SY+t*$SY, \\\ndrawgrid=w=ih/16:h=ih/16:t=1:c=white@0.5, \\\ndrawbox=x=60:y=100:w=416:h=416:c=red&quot; \\\n-c:a copy  step3_section.mp4\n\nffplay -loop 0 step3_section.mp4\n</code></pre>\n<h1 id=\"4-step-4-1\" tabindex=\"-1\">4 STEP 4 <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/video/\">#</a></h1>\n<p>to crop it, instead o drawing abox</p>\n<pre><code>ffmpeg -y -i original.webm -i original.webm  -ss $VIDEOSS -t $VIDEOT -filter_complex &quot;\\\ncrop=x=ih*$X/16:y=ih*$Y/16:w=ih*$W/16:h=ih*$H/16, \\\n[0:v]overlay=$OLX-$SX+t*$SX:$OLY-$SY+t*$SY, \\\ncrop=x=60:y=100:w=416:h=416&quot; \\\n-c:a copy  step4_crop.mp4\n\nffplay -loop 0 step4_crop.mp4\n\n</code></pre>\n<h1 id=\"5-step-5\" tabindex=\"-1\">5 STEP 5 <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/video/\">#</a></h1>\n<p>scale down flags=lanczos\n16x16</p>\n<p>instead of drawing the grid\nboxblur=1, histeq, vignette=a=0.1, scale=16:16</p>\n<pre><code>ffmpeg -y -i original.webm -i palette.png -ss $VIDEOSS -t $VIDEOT -filter_complex &quot;\\\ncrop=x=ih*$X/16:y=ih*$Y/16:w=ih*$W/16:h=ih*$H/16, \\\n[0:v]overlay=$OLX-$SX+t*$SX:$OLY-$SY+t*$SY, \\\nhisteq=0.1, vignette=0.1, tmix=frames=3:weights='1 1 1',\ncrop=x=60:y=100:w=416:h=416,\nscale=16:16:flags=lanczos [x]; [x][1:v] paletteuse&quot; \\\n-c:a copy  out.gif\n\nffplay -loop 0 out.gif\n</code></pre>\n<p>WS2812 supports</p>\n<ul>\n<li>24bit - 8 bits per colour</li>\n</ul>\n<p>The esphome Animation suports</p>\n<ul>\n<li>\n<p>24bit - RGB24 - 8 bits per colour.</p>\n</li>\n<li>\n<p>16bit - RGB565 - 5 red, 6 green, 5 blue bits (human eye can percieve more shared of green)</p>\n</li>\n<li>\n<p>24bit 0xffffff = rrrr rrrr gggg gggg bbbb bbbb</p>\n</li>\n<li>\n<p>16bit 0x0fffff = rrrr rggg gggb bbbb</p>\n</li>\n</ul>\n<p>generate a pallet from the cropped video</p>\n<p>ffmpeg -i step4_crop.mp4 -vf &quot;histeq=0.1,palettegen=stats_mode=diff&quot; -y palette.png</p>\n<p>http://blog.pkh.me/p/21-high-quality-gif-with-ffmpeg.html</p>\n",
			"date_published": "2023-04-22T22:36:27Z"
		}
		,
		{
			"id": "https://aogriffiths.github.io/eleventy-base-blog/blog/qemu/",
			"url": "https://aogriffiths.github.io/eleventy-base-blog/blog/qemu/",
			"title": "",
			"content_html": "<ol>\n<li>\n<p>install and test</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> qemu<br>qemu-system-x86_64 <span class=\"token parameter variable\">--version</span></code></pre>\n</li>\n<li>\n<p>create avistaul disk</p>\n<pre><code>mkdir -p ~/vm_debian/\nqemu-img create -f qcow2 ~/vm_debian/disk.qcow2 40G\n</code></pre>\n</li>\n<li>\n<p>Download ISO</p>\n<pre><code>weget ../debian-11.6.0-amd64-netinst.iso\n</code></pre>\n</li>\n<li>\n<p>Run a VM</p>\n<pre><code>qemu-system-x86_64 \\\n-m 4G \\\n-vga virtio \\\n-display default,show-cursor=on \\\n-machine type=q35 \\\n-smp 2 \\\n-cdrom ~/Downloads/debian-11.6.0-amd64-netinst.iso \\\n-drive file=disk.qcow2,if=virtio \\\n-cpu qemu64\n</code></pre>\n</li>\n</ol>\n",
			"date_published": "2023-04-22T22:36:27Z"
		}
		,
		{
			"id": "https://aogriffiths.github.io/eleventy-base-blog/blog/custom_vagrant_box/",
			"url": "https://aogriffiths.github.io/eleventy-base-blog/blog/custom_vagrant_box/",
			"title": "Custom Vagrant Box",
			"content_html": "<p>Here's how to create a custom vagrant box for Debian Arm 64. The process is similar for any OX, any architecture.</p>\n<ol>\n<li>Install VMware</li>\n<li>Create a VM (e.g. &quot;Debian 11.x 64-bit Arm Box&quot;)</li>\n<li>Install Debian (e.g. arm64 variant)\n<ul>\n<li>Create user/password root/vagrant and vagrant/vagrant</li>\n<li>Set up passwordless sudo for the vagrant user</li>\n</ul>\n</li>\n<li>Install the SSH certs<pre><code>https://raw.githubusercontent.com/hashicorp/vagrant/master/keys/vagrant.pub \n~/.ssh/authorized_keys\n``\n</code></pre>\n</li>\n<li>Install VMware Tools (build from source for arm64)</li>\n<li>Speed up grub<pre><code>sudo nano /etc/default/grub\n# change GRUB_TIMEOUT=0\nsudo update-grub\n</code></pre>\n</li>\n<li>Clean the image, remove any unneeded files and packages from the build process</li>\n<li>Shut down the VM</li>\n<li>Change the VM Network settings to Bridged Networking / Autodetect to ensure it has a ip address and is accessible from the host for ssh access.</li>\n<li>Check it runs with <code>vmrun -T fusion start vm_name.vmx</code></li>\n<li>Shutdown again</li>\n<li>Compress the disks<pre><code>/Applications/VMware\\ Fusion.app/Contents/Library/vmware-vdiskmanager -d Virtual\\ Disk.vmdk\n/Applications/VMware\\ Fusion.app/Contents/Library/vmware-vdiskmanager -k Virtual\\ Disk.vmdk\n</code></pre>\n</li>\n<li>Disable scoreboards<pre><code>echo vmx.scoreboard.enabled = \\&quot;FALSE\\&quot; &gt;&gt; *.vmx\n</code></pre>\n</li>\n<li>Delete logs and lock files<pre><code>rm *.log\nrm *.scoreboard\nrm -rf *.vmx.lck\n</code></pre>\n</li>\n<li>Create box meta data</li>\n</ol>\n<pre><code>cat &lt;&lt;EOF &gt;./metadata.json\n{\n&quot;provider&quot;: &quot;vmware_desktop&quot;\n}\nEOF   \n</code></pre>\n<ol start=\"10\">\n<li>\n<p>tar the box file</p>\n<pre><code>tar -C ~/Virtual\\ Machines.localized/Debian\\ 11.x\\ 64-bit\\ Arm\\ Box.vmwarevm -cvzf debain_arm64.box .\n</code></pre>\n</li>\n<li>\n<p>Add the box to Vagrant</p>\n</li>\n</ol>\n<pre><code>vagrant box add debain_arm64_box debain_arm64.box\n</code></pre>\n<p>if you are updating you can run this first to be sure:</p>\n<pre><code>vagrant box remove debain_arm64_box\nvagrant box list\n</code></pre>\n<ol start=\"12\">\n<li>Check</li>\n</ol>\n<pre><code>cd ..\nmkdir test_box\ncd test_box\nvagrant init debain_arm64_box\n</code></pre>\n<p>then add to the Vagrantfile:</p>\n<pre><code>config.vm.box = &quot;debain_arm64_box&quot; # after this line\nconfig.vm.provider 'vmware_fusion' do |p|\n  p.linked_clone = false\nend\nconfig.vm.provider 'vmware_desktop' do |p|\n  p.linked_clone = false\nend\n</code></pre>\n<p>then</p>\n<pre><code>vagrant up\n</code></pre>\n",
			"date_published": "2023-04-20T00:00:00Z"
		}
		,
		{
			"id": "https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/rock4se_build_3_rbuild/",
			"url": "https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/rock4se_build_3_rbuild/",
			"title": "Rock4 SE Debian Build",
			"content_html": "<p>The build of the system image is done using\n<a href=\"https://github.com/radxa-build/rock-4se/blob/main/.github/workflows/build.yml\">radxa-build/rock-4se</a> and\n<a href=\"https://github.com/radxa-repo/rbuild\">radxa-repo/rbuild</a> using docker.</p>\n<h1 id=\"vagrant-method\" tabindex=\"-1\">Vagrant Method <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/rock4se_build_3_rbuild/\">#</a></h1>\n<ol>\n<li>\n<p>Install vagrant</p>\n<pre><code>brew install hashicorp/tap/hashicorp-vagrant\n</code></pre>\n</li>\n<li>\n<p>Instal VMWare Fusion Player</p>\n<p>It took me a while to do this. Could use virtualbox as an alternative but virtualbox support for Apple Silicon is still beta. Look at the official vagrant documentation, which indicates better support for VMware, also also <a href=\"https://medium.com/geekculture/setting-up-vagrant-2-3-0-for-virtual-machine-management-in-mac-apple-m1-pro-9dc4ec9036db\">here</a></p>\n<ul>\n<li>Download and install <a href=\"https://www.vmware.com/uk/products/fusion/fusion-evaluation.html\">Fusion 13 Player for macOS 12+</a> from VMWare</li>\n<li>Download and install Vagrant vmware Utility from Vagrant</li>\n<li><code>vagrant plugin install vagrant-vmware-desktop</code></li>\n</ul>\n</li>\n<li>\n<p>Create a debos docker image, with some customisations</p>\n</li>\n</ol>\n<p>This will allow you to get a bash shell with a builduser later on.</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">docker</span> build <span class=\"token parameter variable\">-t</span> rbuild:6 <span class=\"token builtin class-name\">.</span></code></pre>\n<ol start=\"3\">\n<li>Open a bash shell using the image and volume</li>\n</ol>\n<pre><code>docker run --rm -it -v &quot;$(pwd)&quot;:/root/host --mount source=rock-4se-rbuild,target=/home/builduser/rock-4se-rbuild --tmpfs /dev/shm:rw,nosuid,nodev,exec,size=4g --security-opt label=disable --entrypoint=/bin/bash rbuild:6\n</code></pre>\n<ol start=\"4\">\n<li>Clone the rbuild source\nInside the docker container run:</li>\n</ol>\n<pre><code>git clone https://github.com/radxa-repo/rbuild ./\n</code></pre>\n<ol start=\"5\">\n<li>build the OS image</li>\n</ol>\n<pre><code>./rbuild\n</code></pre>\n<h1 id=\"docker-method-not-working\" tabindex=\"-1\">Docker Method (Not Working) <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/rock4se_build_3_rbuild/\">#</a></h1>\n<p>This method does not work, yet, but it's included here in case it can be made to work at some stage.</p>\n<ol>\n<li>\n<p>Create Docker Volume</p>\n<pre><code>docker volume create rock-4se-rbuild\n</code></pre>\n</li>\n<li>\n<p>Create a debos docker image, with some customisations</p>\n<p>This will allow you to get a bash shell with a builduser later on.</p>\n<pre class=\"language-bash\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">docker</span> build <span class=\"token parameter variable\">-t</span> rbuild:6 <span class=\"token builtin class-name\">.</span></code></pre>\n</li>\n<li>\n<p>Open a bash shell using the image and volume</p>\n<pre><code>docker run --rm -it -v &quot;$(pwd)&quot;:/root/host --mount source=rock-4se-rbuild,target=/home/builduser/rock-4se-rbuild --tmpfs /dev/shm:rw,nosuid,nodev,exec,size=4g --security-opt label=disable --entrypoint=/bin/bash rbuild:6\n</code></pre>\n</li>\n<li>\n<p>Clone the rbuild source</p>\n<p>Inside the docker container run:</p>\n<pre><code>git clone https://github.com/radxa-repo/rbuild ./\n</code></pre>\n</li>\n<li>\n<p>Build the OS image</p>\n<pre><code>./rbuild\n</code></pre>\n</li>\n</ol>\n<hr>\n<ol>\n<li><code>brew install ansible</code></li>\n</ol>\n<p>referecnes:</p>\n<p>https://radxa-repo.github.io/bsp/</p>\n",
			"date_published": "2023-03-25T00:00:00Z"
		}
		,
		{
			"id": "https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/rock4se_build_2_deb_build/",
			"url": "https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/rock4se_build_2_deb_build/",
			"title": "Rock4 SE Debian Build",
			"content_html": "<p>The build of the system image is done using the <a href=\"https://github.com/radxa/debos-radxa.git\">debos-radxa</a>.</p>\n<p>WARNING These instructions are incomplete and untested. <a href=\"https://github.com/radxa/debos-radxa.git\">debos-radxa</a> is being replaced by <a href=\"https://github.com/radxa-repo/rbuild\">rbuild</a>.</p>\n<p>It includes a bespoke Dockerfile to create a build environment but instructions in the README use the standard debos docker image <code>godebos/debos</code>. The README also takes the approach of keeping the source on the parent machine and bind mounting it to the docker container. This works on linux machines but can run in to issue son Mac or Windows, so we take a different aproach here.</p>\n<h1 id=\"dry-run\" tabindex=\"-1\">Dry Run <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/rock4se_build_2_deb_build/\">#</a></h1>\n<p>To build a standard image take the following steps:</p>\n<ol>\n<li>Create a docker volume for the source</li>\n</ol>\n<pre><code>docker volume create debos-radxa\n</code></pre>\n<ol start=\"2\">\n<li>Start a docker container, using this volume</li>\n</ol>\n<pre><code>docker run --rm -it -v &quot;$(pwd)&quot;:/root/host --mount source=debos-radxa,target=/root/debos-radxa --tmpfs /dev/shm:rw,nosuid,nodev,exec,size=4g --security-opt label=disable --entrypoint=/bin/bash godebos/debos\n</code></pre>\n<p>docker run --rm --interactive --tty --tmpfs /dev/shm:rw,nosuid,nodev,exec,size=4g --user $(id -u) --security-opt label=disable <br>\n--workdir $PWD --mount &quot;type=bind,source=$PWD,destination=$PWD&quot; --entrypoint ./build-os.sh godebos/debos\nTOP DIR = /build/stephen/debos-radxa</p>\n<ol start=\"3\">\n<li>Clone the source\nInside the docker containe run:</li>\n</ol>\n<pre><code>cd /root/debos-radxa \ngit clone https://github.com/radxa/debos-radxa.git ./\n</code></pre>\n<ol start=\"4\">\n<li>build the OS image</li>\n</ol>\n<pre><code>./build-os.sh -b rockpi-4b -m debian -v xfce4\n</code></pre>\n<p>This uses pre-built images for u-boot, the kernal, which are all kept in deb packages under <code>/rootfs/packages/arm64/...</code>. The output of the build can be found in the <code>./output/</code> directory.</p>\n<ol start=\"5\">\n<li>To use it</li>\n</ol>\n<pre><code>cp output/rockpi-4b-debian-bullseye-xfce4-arm64-*.img.xz /root/host/\nexit\n</code></pre>\n<p>Then burn this image to an SD card and boot it up.</p>\n<h1 id=\"change-the-kernal\" tabindex=\"-1\">Change the Kernal <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/rock4se_build_2_deb_build/\">#</a></h1>\n<p>Run the following:</p>\n<pre><code>dpkg -I ./rootfs/packages/arm64/kernel/linux-4.4-rock-pi-4-latest_4.4.154-116-rockchip_all.deb\n</code></pre>\n<p>You will see:</p>\n<pre><code>Homepage: https://github.com/radxa/kernel\n</code></pre>\n<p>So this is the project to use to rebuild the kernal, howevber, there is a board suport package which references https://github.com/radxa/kernel, and makes it easier. This can be found at https://github.com/radxa/rockchip-bsp.</p>\n<p>To use ths followig separate intections TODO.</p>\n<p>Follow all the stesp up until <strong>Build the kernal</strong>. There is no need to complete any of the othe steps becuase you will come back to debos-radxa to complile the rest of the OS in to a single image.</p>\n<pre><code>cp /root/host/rockchip-bsp/*.deb ./rootfs/packages/arm64/kernel/\n</code></pre>\n<p>rockpi-4b-debian-bullseye-xfce4-arm64-20221109-1447-gpt.img.xz\nrockpi-4b-debian-bullseye-xfce4-arm64-20230209-0645-gpt.img.xz</p>\n",
			"date_published": "2023-03-25T00:00:00Z"
		}
		,
		{
			"id": "https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/harocks/",
			"url": "https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/harocks/",
			"title": "Home Assistant Rocks!",
			"content_html": "<p>Home Assistant is a fantastic way to bring all your smart devices together in to one smart home. With very little effort you get a slick UI, companion app, remote access (courtesy of Nubu Casa), user configurable automations and much more. But it’s not limited to just that.</p>\n<p>This article will show you how to do a few things beyond the basics, like</p>\n<ul>\n<li>Bespoke Sensors - creating them using esphome</li>\n<li>Outdoors - measuring (and withstanding) the elements.</li>\n<li>Long wires - hard wiring to places wifi and power won’t reach.</li>\n<li>Public APIs - getting data from a source which Home Assistant doesn’t support (yet)</li>\n<li>Rock Pi - A raspberry Pi alternative with good  a cost / performance balance</li>\n<li>Indoor display - attaching a screen directly to home assistant to share a dashboard</li>\n<li>Outdoor display - use RGB leds to create outdoor indicators or digital signage</li>\n</ul>\n<p>It’s intended for makers, inventors, and anyone interested doing more than out of the box stuff. It’s a long article, including code, configuration, hardware assembly and more hands on soldering and making. You can read it all or just pick the bits of interest to you.</p>\n<p>The example its based on is monitoring weather conditions for a rowing club, however you could easily adapt it for many other other outdoor or indoor, sport or non-sport examples.</p>\n<p>I hope it’s useful!</p>\n<p>Part 1 - Home Assistant on a Rock PI</p>\n<p>Home assistant supports Raspberry PI as standard so why use anything else?</p>\n<p>just your home that can help with</p>\n<p>Requirements</p>\n<ul>\n<li>Measure air temperature.</li>\n<li>Measure water temperature.</li>\n<li>Get river flow rate from an online service.</li>\n<li>Show all three data points on a display.\n \nAssumptions</li>\n<li>There is a wall mounted box, which:\n<ul>\n<li>can house a sensor control device;</li>\n<li>is weather proof;</li>\n<li>has access to mains power, which a micro usb charger can be plugged in to;</li>\n<li>has access to wifi.</li>\n</ul>\n</li>\n<li>Air temperature will be measured at the box location or nearby.</li>\n<li>Water temperature will be measured in the river which:\n<ul>\n<li>is no more than 10m away from the sensor control device;</li>\n<li>is connect to by Cat5 cable run from the wall mounted box to the water</li>\n<li>has a secure route for the Cat5 cable which won’t cause a trip hazard or lead to it being damaged</li>\n<li>has a secure way to mount the water temperature sensor so it is underwater at all times</li>\n<li>River height won’t vary more than 1m\n \nSolution\n \n#1 Home Assistant + Display\n \nA single machine running Home Assistant (HA) and the display. Can be located anywhere in the club house with access to WiFi. In the future HA can collect data from other devices too, like cameras, alarms, and other IoT sensors, if you want. Attach a touch screen display directly to it to avoid the need for keyboard and mouse but run a very lightweight UI operating System - just needs a web browser to display home assistant. In order to run both a web browser and Home Assistant the “Home Assistant Container” installation method is needed (the alternative it to run two Rock Pis, one for HA and one for the display which would cost double).\n \nHA can easily gather the temperature sensor data from the ESP device (see below) and using the “scrape” integration can get the river flow rate data from any online webpage. If there is an online API for river flow rate it’s not too hard to write a custom HA integration to pull data from that, which should be more stable than we page scraping the data for obvious reasons.\n \nFor the Home Assistant Setup</li>\n</ul>\n</li>\n<li>Rock PI 4C (Simon has one)</li>\n<li>Pi 7” touch screen display</li>\n<li>Pi 7” case</li>\n<li>24w usb power supply with quick charge support</li>\n<li>Keyboard and mouse for the initial setup</li>\n</ul>\n<p>For the sensors I’ve used:</p>\n<ul>\n<li>Wemos D1 Mini (cheap and small, could switch to one of the larger and most costly esp8266 boards OKdo sell)</li>\n<li></li>\n</ul>\n<ul>\n<li>\n<p>16x16 neopixel</p>\n</li>\n<li>\n<p>16x16 Neopixel Grid</p>\n</li>\n<li>\n<p>Micro USB power supply</p>\n</li>\n<li>\n<p>£10 – 2x RJ45 male and female connectors (to allow the temperature sensors to be easily connected / moved)</p>\n</li>\n<li>\n<p>£15 – UV and weather resistant Cat5 Cable (to connect the temperature sesnors)</p>\n</li>\n<li>\n<p>£2 – 2x DS18B20 temperatures sensors</p>\n</li>\n<li>\n<p>£8 – 2x temperature sensor probe casing</p>\n</li>\n<li>\n<p>£5 – 2x Sundry glue, PTFE tape, double layer heat shrink to create a water tight probes</p>\n</li>\n<li>\n<p>£10 – project enclosure (box to hold the D1 Mini, and cat 5 connectors)</p>\n</li>\n<li>\n<p>£10-£15 – optional 0.96” LCD display can be added to this device (allow people to read the temperature data, and potentially the river flow data, at the location of the sensor device. 0.96” LCD or OLED displays are cheap and easy to connect to ESP devices, anything larger is more expensive or impossible for the ESP to drive).</p>\n</li>\n<li>\n<p>£? Optional other sensors like air pressure and humidity, but that might be beyond the MVP…\n \nTotal - £60-75</p>\n</li>\n<li>\n<p>4-6 hrs to build</p>\n</li>\n<li>\n<p>2-3 hrs to install\n \nHome Assitant OS dosn't yet support the Rock 4 and until it does we will need to set up a clean Debian OS manually.</p>\n</li>\n</ul>\n<h2 id=\"part-4-tbc\" tabindex=\"-1\">Part 4 - TBC <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/harocks/\">#</a></h2>\n<p>configuration.yaml:\n/usr/share/hassio/homeassistant</p>\n<p>RK3399-T</p>\n<p>Hoke assistant is now downloading the docker image layers you need. To follow it’s progress you can run:</p>\n<p>journalctl -f</p>\n<p>sudo ufw allow from 192.168.1.0/24 to any port 8123</p>\n<p>http://192.168.1.9:8123</p>\n<blockquote>\n<p>apt-get install libubootenv-tool</p>\n</blockquote>\n<p>https://wiki.radxa.com/Rockpi4/dev/serial-console</p>\n<p>In seriel console:</p>\n<blockquote>\n<p>setenv bootargs ${bootargs} systemd.unified_cgroup_hierarchy=false\nprintenv  bootargs</p>\n</blockquote>\n<p>cat /proc/cmdline</p>\n<p>(//u-boot bootcmd_mmc1)</p>\n<p>consider for machine name mDNS</p>\n<pre><code>apt install avahi-daemon\n</code></pre>\n<h1 id=\"end\" tabindex=\"-1\">--------- END --------- <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/harocks/\">#</a></h1>\n<p>RDP</p>\n<ul>\n<li>? https://www.digitalocean.com/community/tutorials/how-to-enable-remote-desktop-protocol-using-xrdp-on-ubuntu-22-04</li>\n</ul>\n<p>label kernel-4.4.194-11-rk3399-rockchip-g1bb08d49cc40\nkernel /vmlinuz-4.4.194-11-rk3399-rockchip-g1bb08d49cc40\ninitrd /initrd.img-4.4.194-11-rk3399-rockchip-g1bb08d49cc40\ndevicetreedir /dtbs/4.4.194-11-rk3399-rockchip-g1bb08d49cc40\nappend earlyprintk console=ttyFIQ0,1500000n8 rw init=/sbin/init rootfstype=ext4 rootwait  root=UUID=fa5b60b5-f645-4f68-8d47-b519dd856ea1 console=ttyS2,1500000n8 systemd.unified_cgroup_hierarchy=false apparmor=1 security=apparmor</p>\n<p>Boot procedure</p>\n<ol>\n<li>\n<p>Firmware - Arm trusted firmware initialises the board</p>\n</li>\n<li>\n<p>Bootloader - Hands over to the bootloadaer which is u-boot. Internally u-boot calls &quot;run bootcmd&quot; which runs a number of commands designed to find storage media attached to the board contining &quot;extlinux/extlinux.conf&quot;. IF it's found u-boot will handover to syslinux to use this configuation.</p>\n</li>\n</ol>\n<p>extlinux.conf</p>\n<p>syslinux</p>\n<p>Original</p>\n<pre><code>label kernel-4.4.194-11-rk3399-rockchip-g1bb08d49cc40\n    kernel /vmlinuz-4.4.194-11-rk3399-rockchip-g1bb08d49cc40\n    initrd /initrd.img-4.4.194-11-rk3399-rockchip-g1bb08d49cc40\n    devicetreedir /dtbs/4.4.194-11-rk3399-rockchip-g1bb08d49cc40\n    append earlyprintk console=ttyFIQ0,1500000n8 rw init=/sbin/init rootfstype=ext4 rootwait  root=UUID=fa5b60b5-f645-4f68-8d47-b519dd856ea1 console=ttyS2,1500000n8 \n</code></pre>\n<p>New</p>\n<pre><code>q\n</code></pre>\n<ol start=\"3\">\n<li>Device tree</li>\n<li>Linux kernal Image</li>\n<li>Root Filesystem</li>\n</ol>\n",
			"date_published": "2023-03-25T00:00:00Z"
		}
		,
		{
			"id": "https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/ha_on_rock_4_se/",
			"url": "https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/ha_on_rock_4_se/",
			"title": "Home Assistant on Debian on Rock 4 SE",
			"content_html": "<h1 id=\"home-assistant-on-debian-on-rock-4-se\" tabindex=\"-1\">Home Assistant on Debian on Rock 4 SE <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/ha_on_rock_4_se/\">#</a></h1>\n<p>This installtion method is know as the &quot;Supervised&quot; method. It's required becuase Home Assistant OS dosn't yet support the rock pi, but hopfully it will one day.</p>\n<h2 id=\"steps-part-1-install\" tabindex=\"-1\">Steps - Part 1 - Install <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/ha_on_rock_4_se/\">#</a></h2>\n<ol>\n<li>\n<p>Enable App Armor in the kernal</p>\n<p>This step is the biggest gotcha so lets get it out of the way. The 20221109-1447 relase of the Rock 4 SE image (rockpi-4b-debian-bullseye-xfce4-arm64-20221109-1447) does not have app armor built in to the kernal. To build it in follow the instuctions [here] which give you three deb packages.</p>\n<pre><code>linux-firmware-image-...rockchip_arm64.deb\nlinux-headers-...rockchip_arm64.deb\nlinux-image-...rockchip_arm64.deb\n</code></pre>\n<p>Copy these to your Rock 4 SE and install them:</p>\n<pre><code>scp ./*.deb rock@homeassistant.local:~\nssh rock@homeassistant.local\nsudo dpkg -i *.deb\n</code></pre>\n<p>You willthen need to make the new kernal the default</p>\n<pre><code>sudo nano /boot/extlinux/extlinux.conf\n</code></pre>\n<p>and add:</p>\n<pre><code>DEFAULT kernel-4.4.194-1-rockchip-g1bb08d4\n</code></pre>\n<p>Make sure the name in <code>DEFAULT kernel-4.4.194-1-rockchip-g1bb08d4</code> matches the name in <code>label kernel-4.4.194-1-rockchip-g1bb08d4</code> below.</p>\n</li>\n<li>\n<p>Switch to iptables.</p>\n<p>Debian uses nftables by default but the docker installer requires iptables for NAT.</p>\n<pre><code>sudo apt-get install -y iptables\nsudo update-alternatives --set iptables /usr/sbin/iptables-legacy\nsudo update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy\n</code></pre>\n</li>\n<li>\n<p>Install dependencies</p>\n<p>Install these dependencies now, they are required for the next steps.</p>\n<pre><code>sudo apt-get install \\\napparmor \\\nudisks2 \\\nnetwork-manager \\\nwget \\\ncurl \\\nsystemd-journal-remote -y\n</code></pre>\n<p>Any perl locale warnings can be ignored.</p>\n</li>\n<li>\n<p>Switch to cgroups v1 and enable app armor</p>\n<p>These are kernal parameters and because the Rock 4 SE uses Das U-boot theu are set in <code>/boot/extlinux/extlinux.conf</code>. Append the parameters with the following:</p>\n<pre><code>sudo sed -i '/append/ s/$/ apparmor=1 security=apparmor systemd.unified_cgroup_hierarchy=false/' /boot/extlinux/extlinux.conf\n</code></pre>\n<p><strong>Side note</strong>. If you ever need to do the same with the grub bootloader, the commands would be:</p>\n<pre><code>sudo echo &quot;apparmor=1 security=apparmor systemd.unified_cgroup_hierarchy=false&quot; &gt; /etc/default/grub\nsudo touch  /boot/cmdline.txt\nsudo sed -i -e &quot;1 s/$/ apparmor=1 security=apparmor systemd.unified_cgroup_hierarchy=false/&quot; /boot/cmdline.txt\n</code></pre>\n</li>\n<li>\n<p>Reboot.</p>\n<p>For the cgroups and apparmor changes to take effect:</p>\n<pre><code>sudo reboot\n</code></pre>\n</li>\n<li>\n<p>Install docker</p>\n<pre><code>curl -fsSL https://get.docker.com -o get-docker.sh\n\n#dry run 1st if you want\nsudo sh ./get-docker.sh --dry-run\n\nsudo sh get-docker.sh\n</code></pre>\n<p>Any perl locale warnings can be ignored.</p>\n</li>\n<li>\n<p>Check all required versions meet the spec in <a href=\"https://github.com/home-assistant/architecture/blob/master/adr/0014-home-assistant-supervised.md\">ADR-0014</a> (Optional)</p>\n<p>If you want to be sure, here's the check list and commands to verify version numbers:</p>\n<ul>\n<li><code>&gt;= 20.10.17</code> for Docker CE<pre><code>docker --version\n</code></pre>\n</li>\n<li><code>&gt;=</code>239` for Systemd<pre><code>systemd --version\n</code></pre>\n</li>\n<li><code>&gt;= 1.14.6</code> for NetworkManager<pre><code>apt info network-manager\nnmcli --version\n</code></pre>\n</li>\n<li><code>&gt;= 2.8</code> for udisks2<pre><code>sudo journalctl -b | grep &quot;udisks daemon version&quot;\n</code></pre>\n</li>\n<li><code>== 2.13.x</code> for AppArmor (built into the kernel)<pre><code>sudo aa-status\n</code></pre>\n</li>\n<li><code>11</code> aka Bullseye Debian Linux (no derivatives)<pre><code>cat /etc/os-release\n</code></pre>\n</li>\n<li><code>latest</code> Home Assistant OS-Agent. Only the latest release is supported. See next step for installation.</li>\n</ul>\n</li>\n<li>\n<p>Install the Home Assistant OS-Agent</p>\n<ul>\n<li>\n<p>Download the <code>aarch64</code> release from <a href=\"https://github.com/home-assistant/os-agent/releases/latest\">here</a>.</p>\n<p>You can tell you need arm64/aarch64 by running this command:</p>\n<pre><code>dpkg --print-architecture  \n</code></pre>\n<p>Download it with</p>\n<pre><code>wget https://github.com/home-assistant/os-agent/releases/download/1.4.1/os-agent_1.4.1_linux_aarch64.deb\n</code></pre>\n</li>\n<li>\n<p>Install it with:</p>\n<pre><code>sudo dpkg -i os-agent_1.4.1_linux_aarch64.deb\n</code></pre>\n</li>\n<li>\n<p>Test it worked</p>\n<p>Ensure there is no error when running:</p>\n<pre><code>gdbus introspect --system --dest io.hass.os --object-path /io/hass/os\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>Install Home Assistant Supervised</p>\n<ul>\n<li>\n<p>Install dependencies</p>\n<p>Supervised has some dependencies, in addition to those you've already installed, they should be installed be default, but just to make sure  run:</p>\n<pre><code>sudo apt-get install \\\njq \\\nlibglib2.0-bin \\\ndbus \\\nlsb-release \\\nsystemd-journal-remote -y\n</code></pre>\n</li>\n<li>\n<p>Install the Supervised deb package</p>\n<pre><code>wget https://github.com/home-assistant/supervised-installer/releases/latest/download/homeassistant-supervised.deb\nsudo dpkg -i homeassistant-supervised.deb \n</code></pre>\n<p>When you get the slection menue, choose <code>qemuarm-64</code> for the Rock 4 (which is arm64) and the installation should complete with:</p>\n<pre><code>[info] Within a few minutes you will be able to reach Home Assistant at:\n[info] http://homeassistant.local:8123 or using the IP address of your\n[info] machine: http://192.168.1.9:8123\n</code></pre>\n<p>Ignore the grub / cgroup v1 warning (that was resolved in the u-boot / cgroups step above).</p>\n<p>As it says within a few minutes you will be able to reach Home Assistant at http://homeassistant.local:8123. While you are waiting you can poke arround with the optioinal next step.</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Optional, understand the support conditions in <a href=\"https://github.com/home-assistant/architecture/blob/master/adr/0014-home-assistant-supervised.md\">ADR-0014</a></p>\n</li>\n</ol>\n<ul>\n<li>\n<p><strong>OS dedicated to Home Assistant</strong> - yes, well... kind of, you are going to use the same machine to display the homeassitant UI later on which is <em>interpreting</em> the rules becuase it requires a desktop and a browser.</p>\n</li>\n<li>\n<p><strong>Dependencies installed to the manual</strong> - yes, you did that above.</p>\n</li>\n<li>\n<p><strong>No additional software</strong> - yes, but see <em>interpeting</em> the rules above.</p>\n</li>\n<li>\n<p><strong>Docker using overlayfs2, journald and Container name as Tag, and cgroup v1</strong> - yes, you can confirm the Supervised installer has set this up by running:</p>\n<pre><code>cat /etc/docker/daemon.json\n</code></pre>\n<p>returns:</p>\n<pre><code>{\n     &quot;log-driver&quot;: &quot;journald&quot;,\n     &quot;storage-driver&quot;: &quot;overlay2&quot;,\n     &quot;ip6tables&quot;: true,\n     &quot;experimental&quot;: true,\n     &quot;log-opts&quot;: {\n         &quot;tag&quot;: &quot;{{.Name}}&quot;\n     }\n }\n</code></pre>\n<p>Also, you set up cgroup v1 as a kernal parameter earlier, and if you hadn't docker wouldn't be working now.</p>\n</li>\n<li>\n<p><strong>NetworkManager ienabled in systemd</strong> - yes, you can confirm:</p>\n<pre><code>systemctl status NetworkManager\n</code></pre>\n<p>returns <code>loadaed</code> and <code>active</code>.</p>\n</li>\n<li>\n<p><strong>Systemd journal gateway on /run/systemd-journal-gatewayd.sock</strong> - yes, you installed <code>systemd-journal-remote</code> earlier and you can confirm the Supervised installer has set this up by running:</p>\n<pre><code>systemctl is-active systemd-journal-gatewayd.socket\n</code></pre>\n</li>\n</ul>\n<h2 id=\"steps-part-2-setup-home-assitant\" tabindex=\"-1\">Steps - Part 2 - Setup Home Assitant <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/ha_on_rock_4_se/\">#</a></h2>\n<p>You may need to wait a few minutes but next step is to setup Home Assistant with the basics, through the UI.</p>\n<ol>\n<li>\n<p>Navigate to the front end e.g. at http://homeassistant.local:8123.</p>\n</li>\n<li>\n<p>Create an 'admin' user for configuring Home Assistant. You will later create a 'kiosk' user with less privilidges for displaying dashboard. To be secure you should give the admin user a different password to the 'rock' system account you used fo ssh and set the password for earlier.</p>\n</li>\n<li>\n<p>Set your location (by dragging the pin on the map), and related localisation information.</p>\n</li>\n<li>\n<p>Choose the information you wish to share with Home Assistant's developers</p>\n</li>\n<li>\n<p>Set the step to set up devices, we can come back tot heat later.</p>\n</li>\n</ol>\n<p><img src=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/ha_on_rock_4_se/step2_ha_config.gif\" alt=\"Seting Up HA\"></p>\n<h2 id=\"conclusion\" tabindex=\"-1\">Conclusion <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/ha_on_rock_4_se/\">#</a></h2>\n<p>You now have a workong Home Asssitant installtionon a Rock 4 SE!</p>\n<p>Consider <a href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/ha_on_rock_4_se/custom_ha.md\">Customising Home Assistant</a> next.</p>\n<h2 id=\"references\" tabindex=\"-1\">References <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/ha_on_rock_4_se/\">#</a></h2>\n<ul>\n<li><a href=\"https://www.home-assistant.io/installation/\">Home Asssitant Instalation</a></li>\n<li><a href=\"https://www.home-assistant.io/installation/linux#install-home-assistant-supervised\">Home Assistant Supervised</a> (see end of the page)</li>\n<li><a href=\"https://docs.docker.com/engine/install/debian/\">Docker Install on Debian</a></li>\n</ul>\n",
			"date_published": "2023-03-25T00:00:00Z"
		}
		,
		{
			"id": "https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/debian_on_rock_4_se/",
			"url": "https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/debian_on_rock_4_se/",
			"title": "Debian on Rock 4 SE",
			"content_html": "<h1 id=\"\" tabindex=\"-1\"> <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/debian_on_rock_4_se/\">#</a></h1>\n<p>This giude will take you through how to install Debian on a Rock 4 SE and make some tweeks. The tweeks are to support Home Asssistant, but even if you're not planning to use Home Assitant you may find them usful, particularly if you want to run docker or app armor.</p>\n<p>The approach taken includes two things that are less common in other tutoruals:</p>\n<p>Firstly, installing a custom kernal and changing kernal parameters.</p>\n<p>Sceond, getting ssh access to the board early as possible, which will allow you to configure it from another machine, which is easier than juggling an extra keyboard, mouse and screen.</p>\n<h2 id=\"steps\" tabindex=\"-1\">Steps <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/debian_on_rock_4_se/\">#</a></h2>\n<ol>\n<li>\n<p><strong>Download</strong></p>\n<p>Get the official image for your board from radxa.com <a href=\"https://wiki.radxa.com/Rockpi4/downloads\">here</a>. Choose the Debian 11 / Kernal 4.4 version and flash it to an SD cardusing balenaEtcher.</p>\n</li>\n<li>\n<p><strong>Connect</strong></p>\n<p>Connect the following to your board:</p>\n<ul>\n<li>USB Keyboard</li>\n<li>USB Mouse</li>\n<li>HDMI monitor</li>\n<li>USB-C Power</li>\n<li>SD Card</li>\n</ul>\n</li>\n<li>\n<p><strong>Boot and Secure</strong>.</p>\n<p>Green power LED should be on, blue acticity LED should blink. There will be no HDMI signal but wait 2-3 minuets for the XFCE Desktop.</p>\n<ul>\n<li>\n<p>Login</p>\n<p>Default credietials (rock / rock).</p>\n</li>\n<li>\n<p>Open a terminal</p>\n</li>\n<li>\n<p>Change your password</p>\n<pre><code>passwd rock\n</code></pre>\n<p><img src=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/debian_on_rock_4_se/step1_password.gif\" alt=\"Seting Password\"></p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Connectivity</strong></p>\n<p>In the same teriminal make sure your Rock board can connext to the internet and you can connect to it from another machine.</p>\n<ul>\n<li>\n<p>WiFi (Optional)</p>\n<p>If you're not using a wired network, or you just want WiFi too, connect with:</p>\n<pre><code>sudo nmcli r wifi on\nsudo nmcli dev wifi connect &quot;&lt;ssid&gt;&quot; password &quot;&lt;password&gt;&quot;\n</code></pre>\n</li>\n<li>\n<p>Find the machine's ip address</p>\n<pre><code>hostname -I\n</code></pre>\n<p>We'll use an example ip address of <code>192.168.1.9</code></p>\n</li>\n<li>\n<p>Check connectivity</p>\n<p>Ping google:</p>\n<pre><code>ping google.com\n</code></pre>\n<p>From another machine, ping your board:</p>\n<pre><code>ping 192.168.1.9\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Configure</strong> your system</p>\n<p>Now your Rock board is connected to your local network you can take the followig steps from another machine. Working from your normal desktop / laptop may be more efficient and I find it much easier for copying and pasting commands.</p>\n<p>From another machine:</p>\n<ul>\n<li>\n<p>Setup SSH Keys</p>\n<p>This helps speed up <code>ssh</code>ing. From anothe machine (e.g. your desktop or laptop) run:</p>\n<pre><code>ssh-keygen\nssh-copy-id -i ~/.ssh/id_rsa rock@192.168.1.9\n</code></pre>\n</li>\n<li>\n<p>SSH to the Rock board</p>\n<pre><code>ssh rock@192.168.1.9\n</code></pre>\n</li>\n<li>\n<p>Update Radxa APT public key</p>\n<pre><code>sudo apt-get install -y wget\nsource /etc/os-release\nexport DISTRO=&quot;${VERSION_CODENAME}-stable&quot;\nwget -O - apt.radxa.com/$DISTRO/public.key | sudo apt-key add -\n</code></pre>\n</li>\n<li>\n<p>Update the system</p>\n<pre><code>sudo apt-get update\nsudo apt-get -y --allow-downgrades upgrade \n</code></pre>\n</li>\n<li>\n<p>Set timezone</p>\n<pre><code>timedatectl list-timezones\nsudo timedatectl set-timezone Europe/London\ntimedatectl\n</code></pre>\n</li>\n<li>\n<p>Set a hostname</p>\n<p>It's nice to give your machine a hostname e.g. <em>homeassistant</em>. We won't do this using full blown DNS but the following works using mDNS (via avahi, which is installed by default).</p>\n<pre><code>sudo hostnamectl --static set-hostname homeassistant\nsudo sed -i '2i 127.0.0.1 homeassistant' /etc/hosts\nsudo sed -i '2i 127.0.0.1 homeassistant.local' /etc/hosts\n</code></pre>\n</li>\n<li>\n<p>Reboot and reconnect</p>\n<pre><code>reboot\n</code></pre>\n<p>Wait a few minutes then check you can still <code>ssh</code> to the ip address.</p>\n<pre><code>ssh rock@192.168.1.9\nexit\n</code></pre>\n<p>You maym need to wait a bit longer and retry this a few times but eventually avahi mDNS should do it's thing and you will be able to connect using the hostname:</p>\n<pre><code>ssh rock@homeassistant.local\n</code></pre>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"conclusion-and-next-steps\" tabindex=\"-1\">Conclusion and Next Steps <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/debian_on_rock_4_se/\">#</a></h2>\n<p>You now have a Debian, docker and some kernal evel tweeks on a Rock 4 SE!</p>\n<p>Consider <a href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/debian_on_rock_4_se/ha_on_rock_4_se.md\">installing Home Assistant</a>  next.</p>\n<h2 id=\"references\" tabindex=\"-1\">References <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/rock-4/debian_on_rock_4_se/\">#</a></h2>\n<ul>\n<li><a href=\"https://www.okdo.com/getting-started/get-started-with-rock-4-se-and-debian/\">Rock 4 SE</a> (on OKdo.com)</li>\n<li><a href=\"https://www.okdo.com/getting-started/get-started-with-rock-4c-single-board-computer-debian/\">Rock 4C+</a> (on OKdo.com)</li>\n<li><a href=\"https://wiki.radxa.com/Rockpi4/getting_started\">Rock 4 Getting Started</a> (on radxa.com)</li>\n<li><a href=\"https://wiki.radxa.com/Rock4/Debian\">Rock 4 Debian</a></li>\n<li><a href=\"https://wiki.radxa.com/Rock4/FAQs#Radxa_APT_public_key_is_not_available\">Rock 4 FAQ</a> (on radxa.com) specially the part about updating the APT public key)</li>\n<li><a href=\"https://wiki.radxa.com/Rock3/dev/Debian\">Rock 3 Debian</a> (on radxa.com) specially the part about kernel deb package</li>\n</ul>\n",
			"date_published": "2023-03-25T00:00:00Z"
		}
		,
		{
			"id": "https://aogriffiths.github.io/eleventy-base-blog/blog/mysticrose/rainbow/",
			"url": "https://aogriffiths.github.io/eleventy-base-blog/blog/mysticrose/rainbow/",
			"title": "Python Rainbow",
			"content_html": "<!-- body -->\n\n\n<div id=\"cell-id=ab879152\" class=\"jp-Cell jp-MarkdownCell jp-Notebook-cell\">\n<div class=\"jp-Cell-inputWrapper\">\n<div class=\"jp-Collapser jp-InputCollapser jp-Cell-inputCollapser\">\n</div>\n<div class=\"jp-InputArea jp-Cell-inputArea\"><div class=\"jp-InputPrompt jp-InputArea-prompt\">\n</div><div class=\"jp-RenderedHTMLCommon jp-RenderedMarkdown jp-MarkdownOutput \" data-mime-type=\"text/markdown\">\n<p>Mystic Rose</p>\n\n</div>\n</div>\n</div>\n</div><div id=\"cell-id=3073f46b-8f03-47c7-b722-be2a9ac976e2\" class=\"jp-Cell jp-CodeCell jp-Notebook-cell jp-mod-noOutputs  \">\n<div class=\"jp-Cell-inputWrapper\">\n<div class=\"jp-Collapser jp-InputCollapser jp-Cell-inputCollapser\">\n</div>\n<div class=\"jp-InputArea jp-Cell-inputArea\">\n<div class=\"jp-InputPrompt jp-InputArea-prompt\">In&nbsp;[1]:</div>\n<div class=\"jp-CodeMirrorEditor jp-Editor jp-InputArea-editor\" data-type=\"inline\">\n     <div class=\"CodeMirror cm-s-jupyter\">\n<div class=\" highlight hl-ipython3\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">from</span> <span class=\"nn\">IPython.core.display</span> <span class=\"kn\">import</span> <span class=\"n\">HTML</span>\n</pre></div>\n\n     </div>\n</div>\n</div>\n</div>\n\n</div><div id=\"cell-id=37e48ac4-4c31-4e8e-94d9-5ee247a6dfc5\" class=\"jp-Cell jp-CodeCell jp-Notebook-cell jp-mod-noOutputs  \">\n<div class=\"jp-Cell-inputWrapper\">\n<div class=\"jp-Collapser jp-InputCollapser jp-Cell-inputCollapser\">\n</div>\n<div class=\"jp-InputArea jp-Cell-inputArea\">\n<div class=\"jp-InputPrompt jp-InputArea-prompt\">In&nbsp;[2]:</div>\n<div class=\"jp-CodeMirrorEditor jp-Editor jp-InputArea-editor\" data-type=\"inline\">\n     <div class=\"CodeMirror cm-s-jupyter\">\n<div class=\" highlight hl-ipython3\"><pre><span></span><span class=\"n\">TARGETCOLOURS</span><span class=\"o\">=</span><span class=\"mi\">420</span>\n</pre></div>\n\n     </div>\n</div>\n</div>\n</div>\n\n</div><div id=\"cell-id=824b95bd-3e0a-4c0c-8dad-bc75db08ef06\" class=\"jp-Cell jp-CodeCell jp-Notebook-cell jp-mod-noOutputs  \">\n<div class=\"jp-Cell-inputWrapper\">\n<div class=\"jp-Collapser jp-InputCollapser jp-Cell-inputCollapser\">\n</div>\n<div class=\"jp-InputArea jp-Cell-inputArea\">\n<div class=\"jp-InputPrompt jp-InputArea-prompt\">In&nbsp;[3]:</div>\n<div class=\"jp-CodeMirrorEditor jp-Editor jp-InputArea-editor\" data-type=\"inline\">\n     <div class=\"CodeMirror cm-s-jupyter\">\n<div class=\" highlight hl-ipython3\"><pre><span></span><span class=\"n\">base</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span>   <span class=\"mi\">0</span><span class=\"p\">),</span>   <span class=\"c1\">#red    </span>\n    <span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">165</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span>   <span class=\"c1\">#orange </span>\n    <span class=\"p\">(</span><span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span>   <span class=\"c1\">#yellow </span>\n    <span class=\"p\">(</span><span class=\"mf\">3.0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span>   <span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span>   <span class=\"c1\">#green  </span>\n    <span class=\"p\">(</span><span class=\"mf\">4.0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span>   <span class=\"mi\">0</span><span class=\"p\">,</span>   <span class=\"mi\">255</span><span class=\"p\">),</span> <span class=\"c1\">#blue   </span>\n    <span class=\"p\">(</span><span class=\"mf\">5.0</span><span class=\"p\">,</span> <span class=\"mi\">75</span><span class=\"p\">,</span>  <span class=\"mi\">0</span><span class=\"p\">,</span>   <span class=\"mi\">130</span><span class=\"p\">),</span> <span class=\"c1\">#indigo </span>\n    <span class=\"p\">(</span><span class=\"mf\">6.0</span><span class=\"p\">,</span> <span class=\"mi\">238</span><span class=\"p\">,</span> <span class=\"mi\">130</span><span class=\"p\">,</span> <span class=\"mi\">238</span><span class=\"p\">)</span>  <span class=\"c1\">#violet </span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">basecolours</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"n\">base</span><span class=\"p\">,</span> <span class=\"n\">columns</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'position'</span><span class=\"p\">,</span> <span class=\"s1\">'R'</span><span class=\"p\">,</span> <span class=\"s1\">'G'</span><span class=\"p\">,</span> <span class=\"s1\">'B'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># multilpe the positions of thebase colours to spread them evently across the </span>\n<span class=\"c1\"># full range of target colours.</span>\n<span class=\"n\">basecolours</span><span class=\"p\">[</span><span class=\"s1\">'position'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">basecolours</span><span class=\"p\">[</span><span class=\"s1\">'position'</span><span class=\"p\">]</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">TARGETCOLOURS</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mi\">6</span>\n\n<span class=\"c1\"># add a tag column to show these are base colours</span>\n<span class=\"n\">basecolours</span><span class=\"p\">[</span><span class=\"s1\">'base'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n</pre></div>\n\n     </div>\n</div>\n</div>\n</div>\n\n</div><div id=\"cell-id=3945480c-e352-446c-88de-dd9dd0903f93\" class=\"jp-Cell jp-CodeCell jp-Notebook-cell jp-mod-noOutputs  \">\n<div class=\"jp-Cell-inputWrapper\">\n<div class=\"jp-Collapser jp-InputCollapser jp-Cell-inputCollapser\">\n</div>\n<div class=\"jp-InputArea jp-Cell-inputArea\">\n<div class=\"jp-InputPrompt jp-InputArea-prompt\">In&nbsp;[4]:</div>\n<div class=\"jp-CodeMirrorEditor jp-Editor jp-InputArea-editor\" data-type=\"inline\">\n     <div class=\"CodeMirror cm-s-jupyter\">\n<div class=\" highlight hl-ipython3\"><pre><span></span><span class=\"c1\"># create the full length data frame to hold output colours</span>\n<span class=\"n\">outputcolours</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">({</span><span class=\"s1\">'position'</span><span class=\"p\">:</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">TARGETCOLOURS</span><span class=\"p\">)})</span>\n\n<span class=\"c1\"># splice in the base colours and index on the position</span>\n<span class=\"n\">allcolours</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">concat</span><span class=\"p\">([</span><span class=\"n\">basecolours</span><span class=\"p\">,</span> <span class=\"n\">outputcolours</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">set_index</span><span class=\"p\">(</span><span class=\"s1\">'position'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># interpolate on the index</span>\n<span class=\"n\">allcolours</span> <span class=\"o\">=</span> <span class=\"n\">allcolours</span><span class=\"o\">.</span><span class=\"n\">interpolate</span><span class=\"p\">(</span><span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">'index'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># remove the base colours to get the final output</span>\n<span class=\"n\">outputcolours</span> <span class=\"o\">=</span> <span class=\"n\">allcolours</span><span class=\"p\">[</span><span class=\"n\">allcolours</span><span class=\"o\">.</span><span class=\"n\">base</span> <span class=\"o\">!=</span> <span class=\"kc\">True</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">drop</span><span class=\"p\">(</span><span class=\"s1\">'base'</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre></div>\n\n     </div>\n</div>\n</div>\n</div>\n\n</div><div id=\"cell-id=f4e2f84e-5730-49e6-8121-dac3899711d4\" class=\"jp-Cell jp-CodeCell jp-Notebook-cell   \">\n<div class=\"jp-Cell-inputWrapper\">\n<div class=\"jp-Collapser jp-InputCollapser jp-Cell-inputCollapser\">\n</div>\n<div class=\"jp-InputArea jp-Cell-inputArea\">\n<div class=\"jp-InputPrompt jp-InputArea-prompt\">In&nbsp;[5]:</div>\n<div class=\"jp-CodeMirrorEditor jp-Editor jp-InputArea-editor\" data-type=\"inline\">\n     <div class=\"CodeMirror cm-s-jupyter\">\n<div class=\" highlight hl-ipython3\"><pre><span></span><span class=\"n\">res</span><span class=\"o\">=</span><span class=\"s1\">''</span>\n<span class=\"k\">for</span> <span class=\"n\">index</span><span class=\"p\">,</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">outputcolours</span><span class=\"o\">.</span><span class=\"n\">iterrows</span><span class=\"p\">():</span>\n    <span class=\"n\">res</span> <span class=\"o\">+=</span> <span class=\"sa\">f</span><span class=\"s1\">'&lt;span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(</span><span class=\"si\">{</span><span class=\"n\">row</span><span class=\"o\">.</span><span class=\"n\">R</span><span class=\"si\">}</span><span class=\"s1\">,</span><span class=\"si\">{</span><span class=\"n\">row</span><span class=\"o\">.</span><span class=\"n\">G</span><span class=\"si\">}</span><span class=\"s1\">,</span><span class=\"si\">{</span><span class=\"n\">row</span><span class=\"o\">.</span><span class=\"n\">B</span><span class=\"si\">}</span><span class=\"s1\">)\"&gt; &lt;/span&gt;'</span> \n<span class=\"n\">res</span> <span class=\"o\">+=</span> <span class=\"sa\">f</span><span class=\"s1\">'&lt;span&gt; &lt;/span&gt;'</span> \n<span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">HTML</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">))</span>\n</pre></div>\n\n     </div>\n</div>\n</div>\n</div>\n\n<div class=\"jp-Cell-outputWrapper\">\n<div class=\"jp-Collapser jp-OutputCollapser jp-Cell-outputCollapser\">\n</div>\n\n\n<div class=\"jp-OutputArea jp-Cell-outputArea\">\n<div class=\"jp-OutputArea-child\">\n    \n    <div class=\"jp-OutputPrompt jp-OutputArea-prompt\"></div>\n\n\n\n<div class=\"jp-RenderedHTMLCommon jp-RenderedHTML jp-OutputArea-output \" data-mime-type=\"text/html\">\n<span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,0.0,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,2.3627684964200477,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,4.725536992840095,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,7.088305489260144,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,9.45107398568019,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,11.813842482100238,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,14.176610978520287,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,16.539379474940333,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,18.90214797136038,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,21.26491646778043,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,23.627684964200476,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,25.990453460620525,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,28.353221957040574,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,30.71599045346062,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,33.078758949880665,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,35.44152744630072,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,37.80429594272076,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,40.16706443914081,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,42.52983293556086,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,44.89260143198091,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,47.25536992840095,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,49.618138424821005,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,51.98090692124105,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,54.343675417661096,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,56.70644391408115,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,59.069212410501194,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,61.43198090692124,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,63.794749403341285,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,66.15751789976133,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,68.52028639618139,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,70.88305489260144,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,73.24582338902148,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,75.60859188544153,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,77.97136038186157,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,80.33412887828162,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,82.69689737470166,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,85.05966587112172,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,87.42243436754177,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,89.78520286396181,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,92.14797136038186,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,94.5107398568019,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,96.87350835322195,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,99.23627684964201,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,101.59904534606206,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,103.9618138424821,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,106.32458233890215,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,108.68735083532219,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,111.05011933174224,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,113.4128878281623,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,115.77565632458234,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,118.13842482100239,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,120.50119331742243,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,122.86396181384248,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,125.22673031026252,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,127.58949880668257,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,129.95226730310262,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,132.31503579952266,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,134.6778042959427,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,137.04057279236278,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,139.40334128878283,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,141.76610978520287,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,144.12887828162292,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,146.49164677804296,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,148.854415274463,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,151.21718377088305,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,153.5799522673031,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,155.94272076372314,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,158.3054892601432,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,160.66825775656324,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,163.03102625298328,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,165.2147971360382,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,166.5035799522673,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,167.79236276849642,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,169.08114558472553,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,170.36992840095465,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,171.65871121718376,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,172.9474940334129,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,174.23627684964202,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,175.52505966587114,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,176.81384248210026,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,178.10262529832937,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,179.3914081145585,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,180.6801909307876,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,181.96897374701672,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,183.25775656324583,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,184.54653937947495,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,185.83532219570407,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,187.12410501193318,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,188.4128878281623,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,189.7016706443914,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,190.99045346062053,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,192.27923627684964,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,193.56801909307876,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,194.85680190930788,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,196.145584725537,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,197.4343675417661,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,198.72315035799522,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,200.01193317422434,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,201.30071599045345,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,202.58949880668257,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,203.87828162291171,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,205.16706443914083,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,206.45584725536995,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,207.74463007159906,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,209.03341288782818,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,210.3221957040573,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,211.6109785202864,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,212.89976133651552,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,214.18854415274464,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,215.47732696897376,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,216.76610978520287,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,218.054892601432,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,219.3436754176611,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,220.63245823389022,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,221.92124105011933,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,223.21002386634845,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,224.4988066825776,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,225.7875894988067,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,227.07637231503583,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,228.36515513126494,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,229.65393794749406,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,230.94272076372317,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,232.2315035799523,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,233.5202863961814,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,234.80906921241052,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,236.09785202863964,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,237.38663484486875,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,238.67541766109787,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,239.96420047732698,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,241.2529832935561,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,242.54176610978521,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,243.83054892601433,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,245.11933174224345,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,246.40811455847256,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,247.69689737470168,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,248.9856801909308,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,250.2744630071599,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,251.56324582338902,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,252.85202863961814,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(255.0,254.14081145584726,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(253.78281622911692,254.39379474940333,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(250.13126491646776,252.57517899761334,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(246.4797136038186,250.75656324582337,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(242.8281622911694,248.9379474940334,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(239.17661097852024,247.11933174224342,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(235.52505966587108,245.30071599045345,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(231.87350835322192,243.48210023866346,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(228.22195704057276,241.6634844868735,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(224.5704057279236,239.8448687350835,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(220.91885441527444,238.02625298329355,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(217.26730310262528,236.20763723150355,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(213.61575178997612,234.3890214797136,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(209.96420047732693,232.57040572792363,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(206.31264916467777,230.75178997613364,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(202.6610978520286,228.93317422434367,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(199.00954653937944,227.11455847255368,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(195.35799522673028,225.29594272076372,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(191.70644391408112,223.47732696897373,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(188.05489260143196,221.65871121718376,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(184.40334128878277,219.84009546539377,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(180.75178997613364,218.0214797136038,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(177.10023866348445,216.20286396181382,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(173.4486873508353,214.38424821002386,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(169.79713603818612,212.5656324582339,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(166.14558472553696,210.7470167064439,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(162.4940334128878,208.9284009546539,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(158.84248210023864,207.10978520286395,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(155.19093078758948,205.29116945107398,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(151.5393794749403,203.472553699284,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(147.88782816229116,201.65393794749403,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(144.23627684964197,199.83532219570404,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(140.58472553699283,198.01670644391407,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(136.93317422434365,196.19809069212408,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(133.28162291169448,194.37947494033412,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(129.63007159904532,192.56085918854416,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(125.97852028639616,190.74224343675417,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(122.326968973747,188.92362768496417,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(118.67541766109784,187.1050119331742,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(115.02386634844868,185.28639618138425,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(111.37231503579949,183.46778042959426,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(107.72076372315033,181.6491646778043,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(104.06921241050117,179.83054892601433,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(100.417661097852,178.01193317422434,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(96.76610978520284,176.19331742243435,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(93.11455847255368,174.37470167064438,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(89.46300715990452,172.55608591885442,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(85.81145584725536,170.73747016706443,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(82.1599045346062,168.91885441527444,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(78.50835322195701,167.10023866348448,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(74.85680190930785,165.2816229116945,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(71.20525059665869,163.46300715990452,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(67.55369928400953,161.64439140811456,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(63.902147971360364,159.8257756563246,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(60.2505966587112,158.0071599045346,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(56.59904534606204,156.1885441527446,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(52.94749403341288,154.36992840095465,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(49.29594272076372,152.5513126491647,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(45.64439140811456,150.7326968973747,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(41.99284009546537,148.9140811455847,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(38.34128878281621,147.09546539379474,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(34.689737470167046,145.27684964200478,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(31.038186157517885,143.45823389021479,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(27.386634844868723,141.63961813842482,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(23.735083532219562,139.82100238663486,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(20.0835322195704,138.00238663484487,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(16.43198090692124,136.18377088305488,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(12.780429594272078,134.3651551312649,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(9.128878281622889,132.54653937947495,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(5.477326968973728,130.72792362768496,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(1.8257756563245664,128.90930787589497,0.0)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,127.0835322195704,1.8257756563245828)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,125.25059665871122,5.477326968973749)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,123.41766109785203,9.128878281622914)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,121.58472553699283,12.78042959427208)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,119.75178997613365,16.431980906921247)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,117.91885441527447,20.08353221957041)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,116.08591885441527,23.735083532219576)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,114.25298329355608,27.38663484486874)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,112.4200477326969,31.03818615751791)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,110.5871121718377,34.689737470167074)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,108.75417661097852,38.34128878281624)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,106.92124105011932,41.992840095465404)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,105.08830548926014,45.64439140811457)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,103.25536992840095,49.29594272076373)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,101.42243436754175,52.9474940334129)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,99.58949880668257,56.59904534606207)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,97.75656324582337,60.25059665871123)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,95.92362768496419,63.9021479713604)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,94.090692124105,67.55369928400957)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,92.2577565632458,71.20525059665873)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,90.42482100238662,74.85680190930789)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,88.59188544152744,78.50835322195707)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,86.75894988066824,82.15990453460623)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,84.92601431980906,85.81145584725539)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,83.09307875894987,89.46300715990456)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,81.26014319809067,93.11455847255372)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,79.42720763723149,96.76610978520289)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,77.5942720763723,100.41766109785206)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,75.76133651551311,104.06921241050122)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,73.92840095465392,107.72076372315038)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,72.09546539379474,111.37231503579956)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,70.26252983293554,115.02386634844872)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,68.42959427207636,118.67541766109788)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,66.59665871121717,122.32696897374704)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,64.76372315035798,125.97852028639622)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,62.93078758949879,129.63007159904538)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,61.09785202863959,133.28162291169454)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,59.26491646778041,136.9331742243437)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,57.431980906921225,140.5847255369929)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,55.59904534606203,144.23627684964205)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,53.76610978520284,147.8878281622912)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,51.93317422434366,151.53937947494038)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,50.10023866348446,155.19093078758954)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,48.26730310262528,158.8424821002387)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,46.43436754176609,162.49403341288786)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,44.601431980906895,166.14558472553705)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,42.76849642004771,169.7971360381862)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,40.93556085918851,173.44868735083537)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,39.10262529832933,177.10023866348453)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,37.269689737470145,180.7517899761337)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,35.43675417661095,184.40334128878285)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,33.60381861575176,188.05489260143204)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,31.77088305489258,191.7064439140812)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,29.93794749403338,195.35799522673037)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,28.105011933174197,199.00954653937953)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,26.272076372315013,202.6610978520287)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,24.439140811455815,206.31264916467785)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,22.60620525059663,209.964200477327)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,20.773269689737432,213.6157517899762)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,18.94033412887825,217.26730310262536)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,17.107398568019065,220.91885441527452)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,15.274463007159866,224.57040572792368)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,13.441527446300682,228.22195704057285)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,11.608591885441498,231.873508353222)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,9.7756563245823,235.5250596658712)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,7.942720763723116,239.17661097852036)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,6.109785202863932,242.82816229116952)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,4.276849642004734,246.47971360381868)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,2.44391408114555,250.13126491646784)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.0,0.6109785202863662,253.782816229117)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(0.7159904534606405,0.0,253.8066825775656)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(1.7899761336515707,0.0,252.01670644391405)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(2.8639618138425007,0.0,250.2267303102625)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(3.937947494033431,0.0,248.43675417661095)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(5.011933174224361,0.0,246.6467780429594)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(6.085918854415292,0.0,244.85680190930785)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(7.159904534606222,0.0,243.0668257756563)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(8.233890214797151,0.0,241.27684964200475)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(9.307875894988083,0.0,239.4868735083532)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(10.381861575179013,0.0,237.69689737470165)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(11.455847255369942,0.0,235.9069212410501)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(12.529832935560872,0.0,234.11694510739855)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(13.603818615751804,0.0,232.326968973747)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(14.677804295942734,0.0,230.53699284009545)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(15.751789976133663,0.0,228.7470167064439)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(16.825775656324595,0.0,226.95704057279235)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(17.899761336515525,0.0,225.1670644391408)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(18.973747016706454,0.0,223.37708830548925)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(20.047732696897384,0.0,221.5871121718377)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(21.121718377088314,0.0,219.79713603818615)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(22.195704057279244,0.0,218.0071599045346)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(23.269689737470173,0.0,216.21718377088305)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(24.343675417661107,0.0,214.4272076372315)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(25.417661097852037,0.0,212.63723150357993)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(26.491646778042966,0.0,210.8472553699284)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(27.565632458233896,0.0,209.05727923627683)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(28.639618138424826,0.0,207.2673031026253)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(29.713603818615756,0.0,205.47732696897373)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(30.787589498806685,0.0,203.6873508353222)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(31.861575178997615,0.0,201.89737470167063)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(32.93556085918855,0.0,200.1073985680191)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(34.00954653937948,0.0,198.31742243436753)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(35.08353221957041,0.0,196.52744630071598)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(36.15751789976134,0.0,194.73747016706443)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(37.23150357995227,0.0,192.94749403341288)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(38.3054892601432,0.0,191.15751789976133)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(39.37947494033413,0.0,189.3675417661098)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(40.45346062052506,0.0,187.57756563245823)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(41.52744630071599,0.0,185.78758949880668)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(42.601431980906916,0.0,183.99761336515513)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(43.675417661097846,0.0,182.20763723150358)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(44.749403341288776,0.0,180.41766109785203)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(45.82338902147971,0.0,178.62768496420048)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(46.89737470167064,0.0,176.83770883054893)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(47.97136038186157,0.0,175.04773269689738)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(49.0453460620525,0.0,173.25775656324583)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(50.11933174224343,0.0,171.46778042959428)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(51.19331742243436,0.0,169.67780429594274)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(52.26730310262529,0.0,167.88782816229119)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(53.34128878281622,0.0,166.09785202863964)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(54.41527446300715,0.0,164.3078758949881)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(55.48926014319808,0.0,162.51789976133654)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(56.56324582338901,0.0,160.727923627685)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(57.63723150357994,0.0,158.93794749403344)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(58.71121718377087,0.0,157.1479713603819)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(59.7852028639618,0.0,155.35799522673034)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(60.85918854415273,0.0,153.5680190930788)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(61.93317422434366,0.0,151.77804295942724)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(63.007159904534596,0.0,149.9880668257757)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(64.08114558472552,0.0,148.19809069212414)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(65.15513126491645,0.0,146.40811455847256)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(66.22911694510738,0.0,144.61813842482104)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(67.30310262529831,0.0,142.82816229116946)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(68.37708830548924,0.0,141.03818615751794)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(69.45107398568017,0.0,139.24821002386636)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(70.5250596658711,0.0,137.45823389021484)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(71.59904534606204,0.0,135.66825775656326)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(72.67303102625297,0.0,133.87828162291174)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(73.7470167064439,0.0,132.08830548926016)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(74.82100238663483,0.0,130.29832935560864)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(76.94510739856797,1.551312649164643,131.2887828162291)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(79.2792362768496,3.4128878281622566,132.83532219570404)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(81.61336515513122,5.274463007159871,134.38186157517896)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(83.94749403341285,7.136038186157484,135.9284009546539)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(86.28162291169447,8.997613365155098,137.47494033412886)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(88.61575178997609,10.859188544152712,139.02147971360378)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(90.94988066825772,12.720763723150325,140.56801909307873)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(93.28400954653934,14.58233890214794,142.11455847255368)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(95.61813842482097,16.443914081145554,143.6610978520286)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(97.95226730310259,18.30548926014317,145.20763723150355)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(100.28639618138422,20.16706443914078,146.7541766109785)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(102.62052505966584,22.028639618138396,148.30071599045343)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(104.95465393794746,23.890214797136007,149.84725536992838)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(107.28878281622909,25.751789976133622,151.39379474940333)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(109.6229116945107,27.613365155131238,152.94033412887825)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(111.95704057279232,29.47494033412885,154.4868735083532)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(114.29116945107396,31.336515513126464,156.03341288782815)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(116.62529832935559,33.198090692124076,157.57995226730307)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(118.95942720763719,35.059665871121695,159.12649164677802)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(121.29355608591882,36.921241050119306,160.67303102625297)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(123.62768496420045,38.78281622911692,162.2195704057279)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(125.96181384248207,40.64439140811454,163.76610978520284)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(128.2959427207637,42.50596658711215,165.3126491646778)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(130.63007159904532,44.36754176610976,166.85918854415272)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(132.96420047732693,46.22911694510737,168.40572792362767)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(135.29832935560856,48.09069212410499,169.9522673031026)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(137.6324582338902,49.9522673031026,171.49880668257754)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(139.9665871121718,51.81384248210021,173.0453460620525)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(142.30071599045345,53.67541766109783,174.59188544152744)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(144.63484486873506,55.536992840095444,176.13842482100236)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(146.9689737470167,57.398568019093055,177.6849642004773)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(149.30310262529832,59.260143198090674,179.23150357995223)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(151.63723150357993,61.121718377088285,180.77804295942718)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(153.97136038186156,62.9832935560859,182.32458233890213)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(156.3054892601432,64.84486873508351,183.87112171837708)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(158.6396181384248,66.70644391408112,185.417661097852)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(160.97374701670643,68.56801909307875,186.96420047732695)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(163.30787589498806,70.42959427207636,188.51073985680188)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(165.64200477326966,72.29116945107397,190.05727923627683)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(167.9761336515513,74.15274463007158,191.60381861575178)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(170.31026252983293,76.01431980906919,193.15035799522673)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(172.64439140811453,77.8758949880668,194.69689737470165)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(174.97852028639616,79.73747016706443,196.2434367541766)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(177.3126491646778,81.59904534606204,197.78997613365152)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(179.6467780429594,83.46062052505965,199.33651551312647)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(181.98090692124106,85.32219570405726,200.88305489260142)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(184.31503579952266,87.18377088305488,202.42959427207637)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(186.64916467780427,89.04534606205249,203.9761336515513)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(188.98329355608593,90.9069212410501,205.52267303102624)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(191.31742243436753,92.76849642004773,207.06921241050117)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(193.65155131264916,94.63007159904534,208.61575178997612)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(195.9856801909308,96.49164677804295,210.16229116945107)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(198.3198090692124,98.35322195704056,211.70883054892602)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(200.65393794749403,100.21479713603817,213.25536992840094)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(202.98806682577566,102.07637231503578,214.8019093078759)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(205.32219570405726,103.93794749403341,216.3484486873508)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(207.6563245823389,105.79952267303102,217.89498806682576)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(209.99045346062053,107.66109785202863,219.4415274463007)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(212.32458233890213,109.52267303102624,220.98806682577566)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(214.65871121718376,111.38424821002386,222.53460620525058)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(216.9928400954654,113.24582338902147,224.08114558472553)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(219.32696897374703,115.1073985680191,225.62768496420045)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(221.66109785202863,116.9689737470167,227.1742243436754)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(223.99522673031026,118.83054892601432,228.72076372315036)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(226.3293556085919,120.69212410501193,230.2673031026253)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(228.6634844868735,122.55369928400954,231.81384248210023)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(230.99761336515513,124.41527446300715,233.36038186157518)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(233.33174224343676,126.27684964200476,234.9069212410501)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(235.6658711217184,128.1384248210024,236.45346062052505)\"> </span><span style=\"padding: 30px 0.5px; display: inline-block ;background:rgb(238.0,130.0,238.0)\"> </span><span> </span>\n</div>\n\n</div>\n\n</div>\n\n</div>\n\n</div>\n\n\n\n\n\n\n\n\n\n",
			"date_published": "2023-03-25T00:00:00Z"
		}
		,
		{
			"id": "https://aogriffiths.github.io/eleventy-base-blog/blog/mysticrose/",
			"url": "https://aogriffiths.github.io/eleventy-base-blog/blog/mysticrose/",
			"title": "Mystic Rose",
			"content_html": "<p>Mystic Rose</p>\n",
			"date_published": "2023-03-25T00:00:00Z"
		}
		,
		{
			"id": "https://aogriffiths.github.io/eleventy-base-blog/blog/yaml/",
			"url": "https://aogriffiths.github.io/eleventy-base-blog/blog/yaml/",
			"title": "YAML Ain’t Markup Language",
			"content_html": "<p>In fact, it's &quot;a data serialization language designed to be human-friendly and work well with modern programming languages for common everyday tasks&quot;. It is typically used for configuration files, data storage, and transmission.</p>\n<p>Data has three basic primitive types:</p>\n<ol>\n<li>Mappings (hashes/dictionaries)</li>\n<li>Sequences (arrays/lists)</li>\n<li>Scalars (strings/numbers/etc)</li>\n</ol>\n<p>And two styles of serialization, which can be used together:</p>\n<ol>\n<li>Block - uses newlines and indentation</li>\n<li>Flow - a more compact form</li>\n</ol>\n<h1 id=\"borrowed-concepts\" tabindex=\"-1\">Borrowed Concepts <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/yaml/\">#</a></h1>\n<p>YAML borrows concepts from many places including:</p>\n<ul>\n<li><strong>Python:</strong> indentation to indicate nesting in the block style</li>\n<li><strong>JSON:</strong> like <code>{a:1, b:[1,2]}</code> in the flow style</li>\n<li><strong>Perl:</strong> data types (although these are common with many other programming languages)</li>\n<li><strong>Email:</strong> colon &quot;<code>:</code>&quot; for separating key-value pairs (RFC 822)</li>\n<li><strong>MIME:</strong> hyphens like &quot;<code>---</code>&quot; for separating documents in the same file or feed (RFC 2046)</li>\n<li><strong>C:</strong> backslash &quot;<code>\\</code>&quot; escapes sequences</li>\n<li><strong>HTML/CSS:</strong> collapsing whitespace</li>\n</ul>\n<h1 id=\"basic-primitive-data-types\" tabindex=\"-1\">Basic primitive data types <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/yaml/\">#</a></h1>\n<h2 id=\"mappings\" tabindex=\"-1\">Mappings <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/yaml/\">#</a></h2>\n<p>Python has a dictionaries, javascript has objects with properties, other languages might have hashmaps or associative arrays, but they all have one thing in common; they map keys to values. Yaml does this using mappings.</p>\n<p>The syntax is simply &quot;<code>key: value</code>&quot; but note the space after the colon.</p>\n<h3 id=\"examples\" tabindex=\"-1\">Examples <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/yaml/\">#</a></h3>\n<p>Scalars to scalars:</p>\n<table class=\"responsive\">\n<tr>\n<td markdown=\"1\" style=\"\" title=\"YAML\">\n<pre class=\"language-yaml\" tabindex=\"0\"><code class=\"language-yaml\"><span class=\"token key atrule\">length</span><span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><br><span class=\"token key atrule\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span></code></pre>\n</td><td markdown=\"1\" style=\"\" title=\"Graph\">\n<p><svg viewBox=\"0,0,150,36\" width=\"150\" style=\"background-color: ghostwhite;\"><g font-family=\"sans-serif\" font-size=\"10\" transform=\"translate(5,18)\"><g fill=\"none\" stroke=\"#555\" stroke-opacity=\"0.4\" stroke-width=\"1.5\"><path d=\"M0,0C12.5,0,12.5,-6,25,-6\"></path><path d=\"M0,0C12.5,0,12.5,6,25,6\"></path></g><g stroke-linejoin=\"round\" stroke-width=\"3\"><g transform=\"translate(0,0)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\"></text></g><g transform=\"translate(25,-6)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">length: 200</text></g><g transform=\"translate(25,6)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">width: 100</text></g></g></g></svg></p>\n</td>\n</tr>\n</table>\n<p>Most Json is also value yaml:</p>\n<table class=\"responsive\">\n<tr>\n<td markdown=\"1\" style=\"\" title=\"YAML\">\n<pre class=\"language-yaml\" tabindex=\"0\"><code class=\"language-yaml\"><span class=\"token punctuation\">{</span><span class=\"token key atrule\">length</span><span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token key atrule\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">}</span></code></pre>\n</td><td markdown=\"1\" style=\"\" title=\"Graph\">\n<p><svg viewBox=\"0,0,150,36\" width=\"150\" style=\"background-color: ghostwhite;\"><g font-family=\"sans-serif\" font-size=\"10\" transform=\"translate(5,18)\"><g fill=\"none\" stroke=\"#555\" stroke-opacity=\"0.4\" stroke-width=\"1.5\"><path d=\"M0,0C12.5,0,12.5,-6,25,-6\"></path><path d=\"M0,0C12.5,0,12.5,6,25,6\"></path></g><g stroke-linejoin=\"round\" stroke-width=\"3\"><g transform=\"translate(0,0)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\"></text></g><g transform=\"translate(25,-6)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">length: 200</text></g><g transform=\"translate(25,6)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">width: 100</text></g></g></g></svg></p>\n</td>\n</tr>\n</table>\n<h2 id=\"sequences\" tabindex=\"-1\">Sequences <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/yaml/\">#</a></h2>\n<p>Sequences in yaml are just ordered lists of items. Each item must be precented by &quot;<code>- </code>&quot; (note the space after the colon) and idented to the same level.</p>\n<h3 id=\"examples-1\" tabindex=\"-1\">Examples <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/yaml/\">#</a></h3>\n<p>Array of scalars:</p>\n<table class=\"responsive\">\n<tr>\n<td markdown=\"1\" style=\"\" title=\"YAML\">\n<pre class=\"language-yaml\" tabindex=\"0\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> table<br><span class=\"token punctuation\">-</span> chair</code></pre>\n</td><td markdown=\"1\" style=\"\" title=\"JSON\">\n<pre class=\"language-json\" tabindex=\"0\"><code class=\"language-json\"><span class=\"token punctuation\">[</span><br> <span class=\"token string\">\"table\"</span><span class=\"token punctuation\">,</span><br> <span class=\"token string\">\"chair\"</span><br><span class=\"token punctuation\">]</span></code></pre>\n</td><td markdown=\"1\" style=\"\" title=\"Graph\">\n<p><svg viewBox=\"0,0,150,36\" width=\"150\" style=\"background-color: ghostwhite;\"><g font-family=\"sans-serif\" font-size=\"10\" transform=\"translate(5,18)\"><g fill=\"none\" stroke=\"#555\" stroke-opacity=\"0.4\" stroke-width=\"1.5\"><path d=\"M0,0C12.5,0,12.5,-6,25,-6\"></path><path d=\"M0,0C12.5,0,12.5,6,25,6\"></path></g><g stroke-linejoin=\"round\" stroke-width=\"3\"><g transform=\"translate(0,0)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\"></text></g><g transform=\"translate(25,-6)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">0: table</text></g><g transform=\"translate(25,6)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">1: chair</text></g></g></g></svg></p>\n</td>\n</tr>\n</table>\n<p>Array of mappings:</p>\n<table class=\"responsive\">\n<tr>\n<td markdown=\"1\" style=\"\" title=\"YAML\">\n<pre class=\"language-yaml\" tabindex=\"0\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> table<br>  <span class=\"token key atrule\">place</span><span class=\"token punctuation\">:</span> kitchen<br><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> chair<br>  <span class=\"token key atrule\">place</span><span class=\"token punctuation\">:</span> bedroom</code></pre>\n</td><td markdown=\"1\" style=\"\" title=\"JSON\">\n<pre class=\"language-json\" tabindex=\"0\"><code class=\"language-json\"><span class=\"token punctuation\">[</span><br> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"table\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"place\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"kitchen\"</span><br> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br> <span class=\"token punctuation\">{</span><br>  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"chair\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token property\">\"place\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"bedroom\"</span><br> <span class=\"token punctuation\">}</span><br><span class=\"token punctuation\">]</span></code></pre>\n</td><td markdown=\"1\" style=\"\" title=\"Graph\">\n<p><svg viewBox=\"0,0,150,72\" width=\"150\" style=\"background-color: ghostwhite;\"><g font-family=\"sans-serif\" font-size=\"10\" transform=\"translate(5,36)\"><g fill=\"none\" stroke=\"#555\" stroke-opacity=\"0.4\" stroke-width=\"1.5\"><path d=\"M0,0C12.5,0,12.5,-18,25,-18\"></path><path d=\"M0,0C12.5,0,12.5,18,25,18\"></path><path d=\"M25,-18C37.5,-18,37.5,-24,50,-24\"></path><path d=\"M25,-18C37.5,-18,37.5,-12,50,-12\"></path><path d=\"M25,18C37.5,18,37.5,12,50,12\"></path><path d=\"M25,18C37.5,18,37.5,24,50,24\"></path></g><g stroke-linejoin=\"round\" stroke-width=\"3\"><g transform=\"translate(0,0)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\"></text></g><g transform=\"translate(25,-18)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\">0:</text></g><g transform=\"translate(25,18)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\">1:</text></g><g transform=\"translate(50,-24)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">name: table</text></g><g transform=\"translate(50,-12)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">place: kitchen</text></g><g transform=\"translate(50,12)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">name: chair</text></g><g transform=\"translate(50,24)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">place: bedroom</text></g></g></g></svg></p>\n</td>\n</tr>\n</table>\n<p><strong>cool</strong></p>\n<table class=\"responsive\">\n<tr>\n<td markdown=\"1\" style=\"\" title=\"YAML\">\n<pre class=\"language-yaml\" tabindex=\"0\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">table</span><span class=\"token punctuation\">:</span><br>    <span class=\"token key atrule\">length</span><span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><br>    <span class=\"token key atrule\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><br><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">chair</span><span class=\"token punctuation\">:</span><br>    <span class=\"token key atrule\">length</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50</span><br>    <span class=\"token key atrule\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50</span></code></pre>\n</td><td markdown=\"1\" style=\"\" title=\"Graph\">\n<p><svg viewBox=\"0,0,150,72\" width=\"150\" style=\"background-color: ghostwhite;\"><g font-family=\"sans-serif\" font-size=\"10\" transform=\"translate(5,36)\"><g fill=\"none\" stroke=\"#555\" stroke-opacity=\"0.4\" stroke-width=\"1.5\"><path d=\"M0,0C12.5,0,12.5,-18,25,-18\"></path><path d=\"M0,0C12.5,0,12.5,18,25,18\"></path><path d=\"M25,-18C37.5,-18,37.5,-18,50,-18\"></path><path d=\"M25,18C37.5,18,37.5,18,50,18\"></path><path d=\"M50,-18C62.5,-18,62.5,-24,75,-24\"></path><path d=\"M50,-18C62.5,-18,62.5,-12,75,-12\"></path><path d=\"M50,18C62.5,18,62.5,12,75,12\"></path><path d=\"M50,18C62.5,18,62.5,24,75,24\"></path></g><g stroke-linejoin=\"round\" stroke-width=\"3\"><g transform=\"translate(0,0)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\"></text></g><g transform=\"translate(25,-18)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\">0:</text></g><g transform=\"translate(25,18)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\">1:</text></g><g transform=\"translate(50,-18)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\">table:</text></g><g transform=\"translate(50,18)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\">chair:</text></g><g transform=\"translate(75,-24)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">length: 200</text></g><g transform=\"translate(75,-12)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">width: 100</text></g><g transform=\"translate(75,12)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">length: 50</text></g><g transform=\"translate(75,24)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">width: 50</text></g></g></g></svg></p>\n</td>\n</tr>\n</table>\n<p><strong>cool</strong></p>\n<table class=\"responsive\">\n<tr>\n<td markdown=\"1\" style=\"\" title=\"YAML\">\n<pre class=\"language-yaml\" tabindex=\"0\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> table<br>  <span class=\"token key atrule\">length</span><span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><br>  <span class=\"token key atrule\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><br><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> chair<br>  <span class=\"token key atrule\">length</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50</span><br>  <span class=\"token key atrule\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50</span></code></pre>\n</td><td markdown=\"1\" style=\"\" title=\"Graph\">\n<p><svg viewBox=\"0,0,150,96\" width=\"150\" style=\"background-color: ghostwhite;\"><g font-family=\"sans-serif\" font-size=\"10\" transform=\"translate(5,48)\"><g fill=\"none\" stroke=\"#555\" stroke-opacity=\"0.4\" stroke-width=\"1.5\"><path d=\"M0,0C12.5,0,12.5,-24,25,-24\"></path><path d=\"M0,0C12.5,0,12.5,24,25,24\"></path><path d=\"M25,-24C37.5,-24,37.5,-36,50,-36\"></path><path d=\"M25,-24C37.5,-24,37.5,-24,50,-24\"></path><path d=\"M25,-24C37.5,-24,37.5,-12,50,-12\"></path><path d=\"M25,24C37.5,24,37.5,12,50,12\"></path><path d=\"M25,24C37.5,24,37.5,24,50,24\"></path><path d=\"M25,24C37.5,24,37.5,36,50,36\"></path></g><g stroke-linejoin=\"round\" stroke-width=\"3\"><g transform=\"translate(0,0)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\"></text></g><g transform=\"translate(25,-24)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\">0:</text></g><g transform=\"translate(25,24)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\">1:</text></g><g transform=\"translate(50,-36)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">name: table</text></g><g transform=\"translate(50,-24)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">length: 200</text></g><g transform=\"translate(50,-12)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">width: 100</text></g><g transform=\"translate(50,12)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">name: chair</text></g><g transform=\"translate(50,24)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">length: 50</text></g><g transform=\"translate(50,36)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">width: 50</text></g></g></g></svg></p>\n</td>\n</tr>\n</table>\n<p><strong>cool</strong></p>\n<table class=\"responsive\">\n<tr>\n<td markdown=\"1\" style=\"\" title=\"YAML\">\n<pre class=\"language-yaml\" tabindex=\"0\"><code class=\"language-yaml\"><span class=\"token key atrule\">table</span><span class=\"token punctuation\">:</span><br> <span class=\"token key atrule\">length</span><span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><br> <span class=\"token key atrule\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><br><span class=\"token key atrule\">chair</span><span class=\"token punctuation\">:</span><br> <span class=\"token key atrule\">length</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50</span><br> <span class=\"token key atrule\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50</span></code></pre>\n</td><td markdown=\"1\" style=\"\" title=\"Graph\">\n<p><svg viewBox=\"0,0,150,72\" width=\"150\" style=\"background-color: ghostwhite;\"><g font-family=\"sans-serif\" font-size=\"10\" transform=\"translate(5,36)\"><g fill=\"none\" stroke=\"#555\" stroke-opacity=\"0.4\" stroke-width=\"1.5\"><path d=\"M0,0C12.5,0,12.5,-18,25,-18\"></path><path d=\"M0,0C12.5,0,12.5,18,25,18\"></path><path d=\"M25,-18C37.5,-18,37.5,-24,50,-24\"></path><path d=\"M25,-18C37.5,-18,37.5,-12,50,-12\"></path><path d=\"M25,18C37.5,18,37.5,12,50,12\"></path><path d=\"M25,18C37.5,18,37.5,24,50,24\"></path></g><g stroke-linejoin=\"round\" stroke-width=\"3\"><g transform=\"translate(0,0)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\"></text></g><g transform=\"translate(25,-18)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\">table:</text></g><g transform=\"translate(25,18)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\">chair:</text></g><g transform=\"translate(50,-24)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">length: 200</text></g><g transform=\"translate(50,-12)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">width: 100</text></g><g transform=\"translate(50,12)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">length: 50</text></g><g transform=\"translate(50,24)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">width: 50</text></g></g></g></svg></p>\n</td>\n</tr>\n</table>\n<p><strong>cool</strong></p>\n<table class=\"responsive\">\n<tr>\n<td markdown=\"1\" style=\"\" title=\"YAML\">\n<pre class=\"language-yaml\" tabindex=\"0\"><code class=\"language-yaml\"><span class=\"token key atrule\">table</span><span class=\"token punctuation\">:</span><br>    <span class=\"token punctuation\">-</span> living<br>    <span class=\"token punctuation\">-</span> kitchen<br><span class=\"token key atrule\">chair</span><span class=\"token punctuation\">:</span><br>    <span class=\"token punctuation\">-</span> living<br>    <span class=\"token punctuation\">-</span> kitchen<br>    <span class=\"token punctuation\">-</span> bedroom</code></pre>\n</td><td markdown=\"1\" style=\"\" title=\"Graph\">\n<p><svg viewBox=\"0,0,150,84\" width=\"150\" style=\"background-color: ghostwhite;\"><g font-family=\"sans-serif\" font-size=\"10\" transform=\"translate(5,39)\"><g fill=\"none\" stroke=\"#555\" stroke-opacity=\"0.4\" stroke-width=\"1.5\"><path d=\"M0,0C12.5,0,12.5,-21,25,-21\"></path><path d=\"M0,0C12.5,0,12.5,21,25,21\"></path><path d=\"M25,-21C37.5,-21,37.5,-27,50,-27\"></path><path d=\"M25,-21C37.5,-21,37.5,-15,50,-15\"></path><path d=\"M25,21C37.5,21,37.5,9,50,9\"></path><path d=\"M25,21C37.5,21,37.5,21,50,21\"></path><path d=\"M25,21C37.5,21,37.5,33,50,33\"></path></g><g stroke-linejoin=\"round\" stroke-width=\"3\"><g transform=\"translate(0,0)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\"></text></g><g transform=\"translate(25,-21)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\">table:</text></g><g transform=\"translate(25,21)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\">chair:</text></g><g transform=\"translate(50,-27)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">0: living</text></g><g transform=\"translate(50,-15)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">1: kitchen</text></g><g transform=\"translate(50,9)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">0: living</text></g><g transform=\"translate(50,21)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">1: kitchen</text></g><g transform=\"translate(50,33)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">2: bedroom</text></g></g></g></svg></p>\n</td>\n</tr>\n</table>\n<p><strong>cool</strong></p>\n<table class=\"responsive\">\n<tr>\n<td markdown=\"1\" style=\"\" title=\"YAML\">\n<pre class=\"language-yaml\" tabindex=\"0\"><code class=\"language-yaml\"><span class=\"token key atrule\">table</span><span class=\"token punctuation\">:</span><br>    <span class=\"token punctuation\">-</span> <span class=\"token important\">&amp;LR</span> living<br>    <span class=\"token punctuation\">-</span> <span class=\"token important\">&amp;KI</span> kitchen<br><span class=\"token key atrule\">chair</span><span class=\"token punctuation\">:</span><br>    <span class=\"token punctuation\">-</span> <span class=\"token important\">*LR</span><br>    <span class=\"token punctuation\">-</span> <span class=\"token important\">*KI</span><br>    <span class=\"token punctuation\">-</span> bedroom</code></pre>\n</td><td markdown=\"1\" style=\"\" title=\"Graph\">\n<p><svg viewBox=\"0,0,150,84\" width=\"150\" style=\"background-color: ghostwhite;\"><g font-family=\"sans-serif\" font-size=\"10\" transform=\"translate(5,39)\"><g fill=\"none\" stroke=\"#555\" stroke-opacity=\"0.4\" stroke-width=\"1.5\"><path d=\"M0,0C12.5,0,12.5,-21,25,-21\"></path><path d=\"M0,0C12.5,0,12.5,21,25,21\"></path><path d=\"M25,-21C37.5,-21,37.5,-27,50,-27\"></path><path d=\"M25,-21C37.5,-21,37.5,-15,50,-15\"></path><path d=\"M25,21C37.5,21,37.5,9,50,9\"></path><path d=\"M25,21C37.5,21,37.5,21,50,21\"></path><path d=\"M25,21C37.5,21,37.5,33,50,33\"></path></g><g stroke-linejoin=\"round\" stroke-width=\"3\"><g transform=\"translate(0,0)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\"></text></g><g transform=\"translate(25,-21)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\">table:</text></g><g transform=\"translate(25,21)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\">chair:</text></g><g transform=\"translate(50,-27)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">0: living</text></g><g transform=\"translate(50,-15)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">1: kitchen</text></g><g transform=\"translate(50,9)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">0: living</text></g><g transform=\"translate(50,21)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">1: kitchen</text></g><g transform=\"translate(50,33)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">2: bedroom</text></g></g></g></svg></p>\n</td>\n</tr>\n</table>\n<p><strong>cool</strong></p>\n<table class=\"responsive\">\n<tr>\n<td markdown=\"1\" style=\"\" title=\"YAML\">\n<pre class=\"language-yaml\" tabindex=\"0\"><code class=\"language-yaml\">X<br>  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">Y</span><span class=\"token punctuation\">:</span> hello</code></pre>\n</td><td markdown=\"1\" style=\"\" title=\"Graph\">\n<p>formatter failed with message: YAMLParseError: Implicit keys need to be on a single line at line 2, column 1:</p>\n<p>X\n^</p>\n</td>\n</tr>\n</table>\n<p><strong>cool</strong></p>\n<table class=\"responsive\">\n<tr>\n<td markdown=\"1\" style=\"\" title=\"YAML\">\n<pre class=\"language-yaml\" tabindex=\"0\"><code class=\"language-yaml\"><span class=\"token key atrule\">X</span><span class=\"token punctuation\">:</span><br><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">Y</span><span class=\"token punctuation\">:</span> hello</code></pre>\n</td><td markdown=\"1\" style=\"\" title=\"Graph\">\n<p><svg viewBox=\"0,0,150,24\" width=\"150\" style=\"background-color: ghostwhite;\"><g font-family=\"sans-serif\" font-size=\"10\" transform=\"translate(5,12)\"><g fill=\"none\" stroke=\"#555\" stroke-opacity=\"0.4\" stroke-width=\"1.5\"><path d=\"M0,0C12.5,0,12.5,0,25,0\"></path><path d=\"M25,0C37.5,0,37.5,0,50,0\"></path><path d=\"M50,0C62.5,0,62.5,0,75,0\"></path></g><g stroke-linejoin=\"round\" stroke-width=\"3\"><g transform=\"translate(0,0)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\"></text></g><g transform=\"translate(25,0)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\">X:</text></g><g transform=\"translate(50,0)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\">0:</text></g><g transform=\"translate(75,0)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">Y: hello</text></g></g></g></svg></p>\n</td>\n</tr>\n</table>\n<p><strong>cool</strong></p>\n<table class=\"responsive\">\n<tr>\n<td markdown=\"1\" style=\"\" title=\"YAML\">\n<pre class=\"language-yaml\" tabindex=\"0\"><code class=\"language-yaml\"><span class=\"token key atrule\">X</span><span class=\"token punctuation\">:</span><br>  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">Y</span><span class=\"token punctuation\">:</span> hello</code></pre>\n</td><td markdown=\"1\" style=\"\" title=\"Graph\">\n<p><svg viewBox=\"0,0,150,24\" width=\"150\" style=\"background-color: ghostwhite;\"><g font-family=\"sans-serif\" font-size=\"10\" transform=\"translate(5,12)\"><g fill=\"none\" stroke=\"#555\" stroke-opacity=\"0.4\" stroke-width=\"1.5\"><path d=\"M0,0C12.5,0,12.5,0,25,0\"></path><path d=\"M25,0C37.5,0,37.5,0,50,0\"></path><path d=\"M50,0C62.5,0,62.5,0,75,0\"></path></g><g stroke-linejoin=\"round\" stroke-width=\"3\"><g transform=\"translate(0,0)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\"></text></g><g transform=\"translate(25,0)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\">X:</text></g><g transform=\"translate(50,0)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\">0:</text></g><g transform=\"translate(75,0)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">Y: hello</text></g></g></g></svg></p>\n</td>\n</tr>\n</table>\n<p><strong>cool</strong></p>\n<table class=\"responsive\">\n<tr>\n<td markdown=\"1\" style=\"\" title=\"YAML\">\n<pre class=\"language-yaml\" tabindex=\"0\"><code class=\"language-yaml\"><span class=\"token key atrule\">X</span><span class=\"token punctuation\">:</span><br><span class=\"token key atrule\">Y</span><span class=\"token punctuation\">:</span> hello</code></pre>\n</td><td markdown=\"1\" style=\"\" title=\"Graph\">\n<p><svg viewBox=\"0,0,150,36\" width=\"150\" style=\"background-color: ghostwhite;\"><g font-family=\"sans-serif\" font-size=\"10\" transform=\"translate(5,18)\"><g fill=\"none\" stroke=\"#555\" stroke-opacity=\"0.4\" stroke-width=\"1.5\"><path d=\"M0,0C12.5,0,12.5,-6,25,-6\"></path><path d=\"M0,0C12.5,0,12.5,6,25,6\"></path></g><g stroke-linejoin=\"round\" stroke-width=\"3\"><g transform=\"translate(0,0)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\"></text></g><g transform=\"translate(25,-6)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">X: null</text></g><g transform=\"translate(25,6)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">Y: hello</text></g></g></g></svg></p>\n</td>\n</tr>\n</table>\n<p><strong>cool</strong></p>\n<table class=\"responsive\">\n<tr>\n<td markdown=\"1\" style=\"\" title=\"YAML\">\n<pre class=\"language-yaml\" tabindex=\"0\"><code class=\"language-yaml\"><span class=\"token key atrule\">X</span><span class=\"token punctuation\">:</span><br> <span class=\"token key atrule\">Y</span><span class=\"token punctuation\">:</span> hello</code></pre>\n</td><td markdown=\"1\" style=\"\" title=\"Graph\">\n<p><svg viewBox=\"0,0,150,24\" width=\"150\" style=\"background-color: ghostwhite;\"><g font-family=\"sans-serif\" font-size=\"10\" transform=\"translate(5,12)\"><g fill=\"none\" stroke=\"#555\" stroke-opacity=\"0.4\" stroke-width=\"1.5\"><path d=\"M0,0C12.5,0,12.5,0,25,0\"></path><path d=\"M25,0C37.5,0,37.5,0,50,0\"></path></g><g stroke-linejoin=\"round\" stroke-width=\"3\"><g transform=\"translate(0,0)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\"></text></g><g transform=\"translate(25,0)\"><circle fill=\"#555\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"-4\" text-anchor=\"end\">X:</text></g><g transform=\"translate(50,0)\"><circle fill=\"#999\" r=\"2.5\"></circle><text stroke=\"white\" paint-order=\"stroke\" dy=\"0.16em\" x=\"4\" text-anchor=\"start\">Y: hello</text></g></g></g></svg></p>\n</td>\n</tr>\n</table>\n\n<style>\n/* If you are seeing this your markdown render does not support custom styles. Sorry. */\n\ntable.responsive {\n  width: 100%;\n  border-collapse: collapse;\n  border-spacing: 0;\n  table-layout: fixed ;\n}\n\ntable.responsive th {  \n  width: 1%;\n  font-weight: bold;\n  text-align: left;\n}\n\n\ntable.responsive td {\n  padding: 10px;\n  border: 0px solid black;\n  width: 10%;\n}\n\n@media screen and (prefers-color-scheme: dark) {\n   tr.header + tr {\n      border-top: 1px solid DimGray;\n   }\n   tr:not(.header) {\n      border-bottom: 1px solid DimGray;\n   }\n   tr.header {\n      border-bottom: 1px solid LightGray;\n   }\n}\n\n@media screen and (prefers-color-scheme: light) {\n   tr.header + tr {\n      border-top: 1px solid LightGray;\n   }\n   tr:not(.header) {\n      border-bottom: 1px solid LightGray;\n   }\n   tr.header {\n      border-bottom: 1px solid DimGray;\n   }\n}\n\n\n@media screen and (max-width: 767px) {\n  table.responsive {\n    display: block;\n  }\n  table.responsive tr.header {\n    display: none;\n  }\n  table.responsive tr {\n    display: flex;\n    flex-wrap: wrap;\n    margin-bottom: 10px;\n  }\n  table.responsive td {\n    flex-basis: 100%;\n    padding: 5px;\n  }\n  td::before {\n    content: attr(title);\n    font-size: 8pt;\n    font-variant-caps: all-small-caps;\n    color: LightGray;\n  }\n}\n</style>\n",
			"date_published": "2023-01-30T00:00:00Z"
		}
		,
		{
			"id": "https://aogriffiths.github.io/eleventy-base-blog/blog/markdown/",
			"url": "https://aogriffiths.github.io/eleventy-base-blog/blog/markdown/",
			"title": "Opinionated Markdown Guide",
			"content_html": "<p>Markdown is simple, effective way to document your stuff. From README's and project docs to making a blog markdown can do the trick.</p>\n<p>Here's a cheat sheet, collection of hacks and style guide. It is intended to work with github (github formatted markdown) and jekyll (often used for github pages). although there is more than one way to do things with markdown, this guide doesn't get in to that, it offers one way. This makes it quick to follow, consistent an opinionated markdown guide (you can call it the OMG if you want).</p>\n<h2 id=\"headings\" tabindex=\"-1\">Headings <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/markdown/\">#</a></h2>\n<div class=\"table\">\n<div class=\"row header\"><div class=\"cell\">Markdown</div><div class=\"cell\">Result</div></div>\n<div class=\"row\"><div class=\"cell\">\n<pre class=\"language-markdown\" tabindex=\"0\"><code class=\"language-markdown\"><span class=\"token title important\">**Title**<br><span class=\"token punctuation\">=========</span></span></code></pre>\n</div><div class=\"cell\">\n<h1 id=\"title\" tabindex=\"-1\"><strong>Title</strong> <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/markdown/\">#</a></h1>\n</div></div>\n<div class=\"row\"><div class=\"cell\">\n<pre class=\"language-markdown\" tabindex=\"0\"><code class=\"language-markdown\"><span class=\"token title important\">Heading L1<br><span class=\"token punctuation\">==========</span></span></code></pre>\n</div><div class=\"cell\">\n<h1 id=\"heading-l1\" tabindex=\"-1\">Heading L1 <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/markdown/\">#</a></h1>\n</div></div>\n<div class=\"row\"><div class=\"cell\">\n<pre class=\"language-markdown\" tabindex=\"0\"><code class=\"language-markdown\"><span class=\"token title important\">Heading L2<br><span class=\"token punctuation\">----------</span></span></code></pre>\n</div><div class=\"cell\">\n<h2 id=\"heading-l2\" tabindex=\"-1\">Heading L2 <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/markdown/\">#</a></h2>\n</div></div>\n<div class=\"row\"><div class=\"cell\">\n<pre class=\"language-markdown\" tabindex=\"0\"><code class=\"language-markdown\"><span class=\"token title important\"><span class=\"token punctuation\">###</span> Heading L3</span></code></pre>\n</div><div class=\"cell\">\n<h3 id=\"heading-l3\" tabindex=\"-1\">Heading L3 <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/markdown/\">#</a></h3>\n</div></div>\n<div class=\"row\"><div class=\"cell\">\n<pre class=\"language-markdown\" tabindex=\"0\"><code class=\"language-markdown\"><span class=\"token title important\"><span class=\"token punctuation\">####</span> Heading L4</span></code></pre>\n</div><div class=\"cell\">\n<h4 id=\"heading-l4\" tabindex=\"-1\">Heading L4 <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/markdown/\">#</a></h4>\n</div></div>\n<div class=\"row\"><div class=\"cell\">\n<pre class=\"language-markdown\" tabindex=\"0\"><code class=\"language-markdown\"><span class=\"token title important\"><span class=\"token punctuation\">#####</span> Heading L5</span></code></pre>\n</div><div class=\"cell\">\n<h5>Heading L5</h5>\n</div></div>\n<div class=\"row\"><div class=\"cell\">\n<pre class=\"language-markdown\" tabindex=\"0\"><code class=\"language-markdown\"><span class=\"token title important\"><span class=\"token punctuation\">######</span> Heading L6</span></code></pre>\n</div><div class=\"cell\">\n<h6>Heading L6</h6>\n</div></div>\n</div>\n<h3 id=\"notes\" tabindex=\"-1\">Notes <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/markdown/\">#</a></h3>\n<ol>\n<li>Do not use the <code>Title</code> or <code>Heading 1</code> format anywhere.</li>\n<li>Use underlines <code>---</code> for and L2 and <code>###</code> for L3 to L6. Make the underlines the same length as the heading.</li>\n<li>Alwsy place a space after <code>#</code>.</li>\n<li>Always have a blank line before and after above a heading.</li>\n</ol>\n<blockquote>\n<p>⚠️ <strong>Warning:</strong>  <code>===</code> with jekyll minima results in a <code>h1</code> that is smaller than a <code>h2</code>. See <a href=\"https://github.com/jekyll/minima/issues/113\">here</a>.</p>\n</blockquote>\n<blockquote>\n<p>ℹ️ <strong>Info:</strong> If you never plan to use jekyll you could adopt:</p>\n<ol>\n<li>\n<p>Use underlines <code>===</code> and <code>---</code> for heading L1 and L2 and <code>###</code> for L3 to L6. Make the underlines the same length as the heading.</p>\n</li>\n<li>\n<p>If you want an overall title for the document, bold the first heading. (But you might not need this if you have <code>title:</code> in a front matter block)</p>\n</li>\n<li>\n<p>In a long markdown file don't use L1 just once, use it as many times a you need to split the content in to sections.</p>\n</li>\n</ol>\n</blockquote>\n<h2 id=\"paragraph-text\" tabindex=\"-1\">Paragraph Text <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/markdown/\">#</a></h2>\n<div class=\"table\">\n<div class=\"row header\"><div class=\"cell\">Markdown</div><div class=\"cell\">Result</div></div>\n<div class=\"row\"><div class=\"cell\">\n<pre class=\"language-markdown\" tabindex=\"0\"><code class=\"language-markdown\">Use single spaces, <br>and single newlines<br>to create a single paragraph.</code></pre>\n</div><div class=\"cell\">\n<p>Use single spaces,\nand single newlines\nto create a single paragraph.</p>\n</div></div>\n<div class=\"row\"><div class=\"cell\">\n<pre class=\"language-markdown\" tabindex=\"0\"><code class=\"language-markdown\">Use a double newline to start...<br><br>A new paragraph.</code></pre>\n</div><div class=\"cell\">\n<p>Use a double newline to start...</p>\n<p>A new paragraph.</p>\n</div></div>\n<div class=\"row\"><div class=\"cell\">\n<pre class=\"language-markdown\" tabindex=\"0\"><code class=\"language-markdown\">Double trailing  <br>space at the end  <br>of lines for  <br>line breaks<br></code></pre>\n</div><div class=\"cell\">\n<p>Double trailing<br>\nspace at the end<br>\nof lines for<br>\nline breaks</p>\n</div></div>\n</div>\n<h2 id=\"lists\" tabindex=\"-1\">Lists <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/markdown/\">#</a></h2>\n<div class=\"table\">\n<div class=\"row header\"><div class=\"cell\">Markdown</div><div class=\"cell\">Result</div></div>\n<div class=\"row\"><div class=\"cell\"> \n<pre class=\"language-markdown\" tabindex=\"0\"><code class=\"language-markdown\"><span class=\"token list punctuation\">-</span> Bulleted <br><span class=\"token list punctuation\">-</span> List </code></pre>\n</div><div class=\"cell\">\n<ul>\n<li>Bulleted</li>\n<li>List</li>\n</ul>\n</div></div>\n<div class=\"row\"><div class=\"cell\">\n<pre class=\"language-markdown\" tabindex=\"0\"><code class=\"language-markdown\"><span class=\"token list punctuation\">1.</span> Ordered<br><span class=\"token list punctuation\">2.</span> List </code></pre>\n</div><div class=\"cell\">\n<ol>\n<li>Ordered</li>\n<li>List</li>\n</ol>\n</div></div>\n<div class=\"row\"><div class=\"cell\">\n<pre class=\"language-markdown\" tabindex=\"0\"><code class=\"language-markdown\"><span class=\"token list punctuation\">-</span> Parent<br>     <span class=\"token list punctuation\">-</span> child (indented by 4)</code></pre>\n</div><div class=\"cell\">\n<ul>\n<li>Parent\n<ul>\n<li>child (indented by 4)</li>\n</ul>\n</li>\n</ul>\n</div></div>\n<div class=\"row\"><div class=\"cell\">\n<pre class=\"language-markdown\" tabindex=\"0\"><code class=\"language-markdown\"><span class=\"token list punctuation\">1.</span> First<br>     <span class=\"token list punctuation\">-</span> with child<br>     <span class=\"token list punctuation\">-</span> 1970\\. escaped number + dot<br><br><span class=\"token list punctuation\">2.</span> With<br>   <br>   paragraph<br><br><span class=\"token list punctuation\">3.</span> With<br>   ```javascript<br>   console.log('fenced code block');<br>   ```</code></pre>\n</div><div class=\"cell\">\n<ol>\n<li>\n<p>First</p>\n<ul>\n<li>with child</li>\n<li>1970. escaped number + dot</li>\n</ul>\n</li>\n<li>\n<p>With</p>\n<p>paragraph</p>\n</li>\n<li>\n<p>With</p>\n<pre class=\"language-javascript\" tabindex=\"0\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fenced code block'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n</li>\n</ol>\n</div></div>\n</div>\n<h3 id=\"notes-1\" tabindex=\"-1\">Notes <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/markdown/\">#</a></h3>\n<ol>\n<li>\n<p>Bullet using <code>-</code></p>\n</li>\n<li>\n<p>Number using <code>0.</code></p>\n</li>\n<li>\n<p>Indent sublists with four spaces</p>\n</li>\n<li>\n<p>Indent any other contnet with 2 spaces</p>\n</li>\n</ol>\n<h2 id=\"formatting\" tabindex=\"-1\">Formatting <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/markdown/\">#</a></h2>\n<div class=\"table\">\n<div class=\"row header\"><div class=\"cell\">Markdown</div><div class=\"cell\">Result</div></div>\n<div class=\"row\"><div class=\"cell\">\n<p><code>**bold**</code></p>\n</div><div class=\"cell\">\n<p><strong>bold</strong></p>\n</div></div>\n<div class=\"row\"><div class=\"cell\">\n<p><code>***italic***</code></p>\n</div><div class=\"cell\">\n<p><em><strong>italic</strong></em></p>\n</div></div>\n<div class=\"row\"><div class=\"cell\">\n<p><code>***bold italic***</code></p>\n</div><div class=\"cell\">\n<p><em><strong>bold italic</strong></em></p>\n</div></div>\n<div class=\"row\"><div class=\"cell\">\n<p><code>**bold _italic_ inside**</code></p>\n</div><div class=\"cell\">\n<p><strong>bold <em>italic</em> inside</strong></p>\n</div></div>\n<div class=\"row\"><div class=\"cell\">\n<p><code>~~strikethrough~~</code></p>\n</div><div class=\"cell\">\n<p><s>strikethrough</s></p>\n</div></div>\n<div class=\"row\"><div class=\"cell\">\n<p><code>Sub&lt;sub&gt;script&lt;/sub&gt;</code></p>\n</div><div class=\"cell\">\n<p>Sub<sub>script</sub></p>\n</div></div>\n<div class=\"row\"><div class=\"cell\">\n<p><code>Super&lt;sup&gt;script&lt;/sup&gt;</code></p>\n</div><div class=\"cell\">\n<p>Super<sup>script</sup></p>\n</div></div>\n</div>\n<h2 id=\"links-and-images\" tabindex=\"-1\">Links and Images <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/markdown/\">#</a></h2>\n<p><a href=\"https://aogriffiths.github.io/eleventy-base-blog/url\">A link</a>\n<img src=\"https://aogriffiths.github.io/eleventy-base-blog/blog/markdown/icon.png\" alt=\"An Image\">\n<a href=\"https://aogriffiths.github.io/eleventy-base-blog/url\"><img src=\"https://aogriffiths.github.io/eleventy-base-blog/url\" alt=\"A linked image\"></a></p>\n<h2 id=\"code\" tabindex=\"-1\">Code <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/markdown/\">#</a></h2>\n<div class=\"table\">\n<div class=\"row header\"><div class=\"cell\">Markdown</div><div class=\"cell\">Result</div></div>\n<div class=\"row\"><div class=\"cell\">\n<pre class=\"language-markdown\" tabindex=\"0\"><code class=\"language-markdown\"><span class=\"token code-snippet code keyword\">`inline`</span> </code></pre>\n</div><div>\n<p><code>inline</code></p>\n</div></div>\n<div class=\"row\"><div class=\"cell\">\n<pre class=\"language-markdown\" tabindex=\"0\"><code class=\"language-markdown\"><span class=\"token code-snippet code keyword\">`` `inline escaped` ``</span></code></pre>\n</div><div>\n<p><code>`inline escaped`</code></p>\n</div></div>\n<div class=\"row\"><div class=\"cell\">\n<pre class=\"language-markdown\" tabindex=\"0\"><code class=\"language-markdown\"><span class=\"token code\"><span class=\"token punctuation\">```</span><span class=\"token code-language\">sh</span><br><span class=\"token code-block language-sh\"># fenced</span><br><span class=\"token punctuation\">```</span></span></code></pre>\n</div><div>\n<pre class=\"language-sh\" tabindex=\"0\"><code class=\"language-sh\"><span class=\"token comment\"># fenced</span></code></pre>\n</div></div>\n<div class=\"row\"><div class=\"cell\">\n<pre class=\"language-markdown\" tabindex=\"0\"><code class=\"language-markdown\"><span class=\"token code\"><span class=\"token punctuation\">```</span><span class=\"token code-language\">`markdown</span><br><span class=\"token code-block language-markdown\">```sh<br><span class=\"token title important\"><span class=\"token punctuation\">#</span> fenced escaped</span></span><br><span class=\"token punctuation\">```</span></span><br>````</code></pre>\n</div><div>\n<pre class=\"language-markdown\" tabindex=\"0\"><code class=\"language-markdown\"><span class=\"token code\"><span class=\"token punctuation\">```</span><span class=\"token code-language\">sh</span><br><span class=\"token code-block language-sh\"><span class=\"token comment\"># fenced escaped</span></span><br><span class=\"token punctuation\">```</span></span></code></pre>\n</div></div>\n</div>\n<h2 id=\"tables\" tabindex=\"-1\">Tables <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/markdown/\">#</a></h2>\n<div class=\"table\">\n<div class=\"row header\"><div class=\"cell\">Markdown</div><div class=\"cell\">Result</div></div>\n<div class=\"row\"><div class=\"cell\">\n<pre class=\"language-markdown\" tabindex=\"0\"><code class=\"language-markdown\"><span class=\"token table\"><span class=\"token table-header-row\"><span class=\"token punctuation\">|</span><span class=\"token table-header important\">       </span><span class=\"token punctuation\">|</span><span class=\"token table-header important\">100%  </span><span class=\"token punctuation\">|</span><span class=\"token table-header important\">Markdown</span><span class=\"token punctuation\">|</span><span class=\"token table-header important\">Table  </span><span class=\"token punctuation\">|</span><br></span><span class=\"token table-line\"><span class=\"token punctuation\">|</span><span class=\"token punctuation\">-------</span><span class=\"token punctuation\">|</span><span class=\"token punctuation\">:-----</span><span class=\"token punctuation\">|</span><span class=\"token punctuation\">:------:</span><span class=\"token punctuation\">|</span><span class=\"token punctuation\">------:</span><span class=\"token punctuation\">|</span><br></span><span class=\"token table-data-rows\"><span class=\"token punctuation\">|</span><span class=\"token table-data\">Row1   </span><span class=\"token punctuation\">|</span><span class=\"token table-data\">Left  </span><span class=\"token punctuation\">|</span><span class=\"token table-data\">Center  </span><span class=\"token punctuation\">|</span><span class=\"token table-data\">Right  </span><span class=\"token punctuation\">|</span><br><span class=\"token punctuation\">|</span><span class=\"token table-data\">Row2   </span><span class=\"token punctuation\">|</span><span class=\"token table-data\">A     </span><span class=\"token punctuation\">|</span><span class=\"token table-data\">B       </span><span class=\"token punctuation\">|</span><span class=\"token table-data\">C      </span><span class=\"token punctuation\">|</span></span></span></code></pre>\n</div><div class=\"cell\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th style=\"text-align:left\">100%</th>\n<th style=\"text-align:center\">Markdown</th>\n<th style=\"text-align:right\">Table</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Row1</td>\n<td style=\"text-align:left\">Left</td>\n<td style=\"text-align:center\">Center</td>\n<td style=\"text-align:right\">Right</td>\n</tr>\n<tr>\n<td>Row2</td>\n<td style=\"text-align:left\">A</td>\n<td style=\"text-align:center\">B</td>\n<td style=\"text-align:right\">C</td>\n</tr>\n</tbody>\n</table>\n</div></div>\n<div class=\"row\"><div class=\"cell\">\n<pre class=\"language-markdown\" tabindex=\"0\"><code class=\"language-markdown\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>table</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span> Multiline markdown <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>th</span><span class=\"token punctuation\">></span></span> in cells <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>th</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tr</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span> <span class=\"token attr-name\">markdown</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br><br>One Table Row<br><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>td</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token list punctuation\">-</span> Two <br><span class=\"token list punctuation\">-</span> Lines<br><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>td</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tr</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>table</span><span class=\"token punctuation\">></span></span></code></pre>\n</div><div class=\"cell\">\n<table>\n<tr><th>  </th><th> Markdown in a table </th></tr>\n<tr><td markdown=\"1\">\n<p>Row1</p>\n</td><td>\n<ul>\n<li>Two lines</li>\n<li>of markdown</li>\n</ul>\n</td></tr>\n</table>\n</div></div>\n</div>\n<h3 id=\"notes-2\" tabindex=\"-1\">Notes <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/markdown/\">#</a></h3>\n<ol>\n<li>For markdown to span multiple lines inside a cell use a html <code>&lt;table&gt;</code> with both <code>&lt;td markdown=&quot;1&quot;&gt;</code> and blank lines as shown.</li>\n</ol>\n<blockquote>\n<p>ℹ️ <strong>Info:</strong> <code>&lt;td markdown=&quot;1&quot;&gt;</code> is required by jekyll flavoured markdown, the blank line is required by github flavoured markdown.</p>\n</blockquote>\n<h2 id=\"comments\" tabindex=\"-1\">Comments <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/markdown/\">#</a></h2>\n<div class=\"table\">\n<div class=\"row header\"><div class=\"cell\">Markdown</div><div class=\"cell\">Result</div></div>\n<div class=\"row\"><div class=\"cell\"> \n<pre><code>A\n\n[nothing to see here]: # \n\nC\n</code></pre>\n</div><div class=\"cell\">\n<p>A</p>\n<p>C</p>\n</div></div>\n</div>\n<h2 id=\"blockquotes\" tabindex=\"-1\">Blockquotes <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/markdown/\">#</a></h2>\n<div class=\"table\">\n<div class=\"row header\"><div class=\"cell\">Markdown</div><div class=\"cell\">Result</div></div>\n<div class=\"row\"><div class=\"cell\"> \n<pre><code>&gt; qoute\n</code></pre>\n</div><div class=\"cell\">\n<blockquote>\n<p>qoute</p>\n</blockquote>\n</div></div>\n<div class=\"row\"><div class=\"cell\">\n<pre><code>&gt; multiline\n&gt;\n&gt; quote\n</code></pre>\n</div><div class=\"cell\">\n<blockquote>\n<p>multiline</p>\n<p>quote</p>\n</blockquote>\n</div></div>\n<div class=\"row\"><div class=\"cell\">\n<pre><code>&gt; quotes\n&gt;&gt; inside\n&gt;&gt;&gt; quotes\n</code></pre>\n</div><div class=\"cell\">\n<blockquote>\n<p>quotes</p>\n<blockquote>\n<p>inside</p>\n<blockquote>\n<p>quotes</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</div></div>\n<div class=\"row\"><div class=\"cell\">\n<pre><code>&gt; Markdown\n&gt; --------\n&gt; - in a\n&gt; - ***quote***\n</code></pre>\n</div><div class=\"cell\">\n<blockquote>\n<h2 id=\"markdown\" tabindex=\"-1\">Markdown <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/markdown/\">#</a></h2>\n<ul>\n<li>in a</li>\n<li><em><strong>quote</strong></em></li>\n</ul>\n</blockquote>\n</div></div>\n</div>\n<h2 id=\"alerts\" tabindex=\"-1\">Alerts <a class=\"header-anchor\" href=\"https://aogriffiths.github.io/eleventy-base-blog/blog/markdown/\">#</a></h2>\n<p>Achieved using blockquotes and emojis.</p>\n<div class=\"table\">\n<div class=\"row header\"><div class=\"cell\">Markdown</div><div class=\"cell\">Result</div></div>\n<div class=\"row\"><div class=\"cell\"> \n<pre><code>&gt; ℹ️ **Info:** just to let you know\n\n&gt; ⚠️ **Warning:** take care\n\n&gt; 🚩 **Error:** will fail\n\n&gt; 📝 **Note:** remember this\n\n&gt; 💡 **Tipx:** a useful trick\n</code></pre>\n</div><div class=\"cell\">\n<blockquote>\n<p>ℹ️ <strong>Info:</strong> just to let you know</p>\n</blockquote>\n<blockquote>\n<p>⚠️ <strong>Warning:</strong> take care</p>\n</blockquote>\n<blockquote>\n<p>🚩 <strong>Error:</strong> will fail</p>\n</blockquote>\n<blockquote>\n<p>📝 <strong>Note:</strong> remember this</p>\n</blockquote>\n<blockquote>\n<p>💡 <strong>Tipx:</strong> a useful trick</p>\n</blockquote>\n</div></div>\n</div>\n<blockquote>\n<p><strong>Note</strong>\nThis is a note</p>\n</blockquote>\n<blockquote>\n<p><strong>Warning</strong>\nThis is a warning</p>\n</blockquote>\n<div class=\"table\">\n<div class=\"row header\"><div class=\"cell\">Markdown</div><div class=\"cell\">Result</div></div>\n<div class=\"row\"><div class=\"cell\">\n<pre><code>a\n</code></pre>\n</div><div class=\"cell\">\n<p>a</p>\n</div></div>\n</div>\n<table class=\"table\">\n<th class=\"row header\"></th><td class=\"cell\">Markdown</td><td class=\"cell\">Result</td>\n<tr class=\"row\"><td class=\"cell\">\n<pre><code>b\n</code></pre>\n</td><td class=\"cell\">\n<p>b</p>\n</td></tr>\n</table>\n<style>\n\n.table {\n  display: table;\n  width: 100%;\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n.row {\n  display: table-row;\n}\n\n.header {\n  font-weight: bold;\n}\n.cell {\n  display: table-cell;\n  padding: 10px;\n  border: 0px solid black;\n}\n\n@media screen and (prefers-color-scheme: dark) {\n   .row + .row {\n      border-top: 1px solid DimGray;\n   }\n   .header {\n      border-bottom: 1px solid LightGray;\n   }\n}\n\n@media screen and (prefers-color-scheme: light) {\n   .row + .row {\n      border-top: 1px solid LightGray;\n   }\n   .header {\n      border-bottom: 1px solid DimGray\n   }\n}\n\n\n@media screen and (max-width: 767px) {\n  .table {\n    display: block;\n  }\n  .row {\n    display: flex;\n    flex-wrap: wrap;\n   \n    margin-bottom: 10px;\n  }\n  .cell {\n    flex-basis: 100%;\n    padding: 5px;\n  }\n  .header {\n    display: none;\n  }\n}\n</style>\n",
			"date_published": "2023-01-30T00:00:00Z"
		}
		
	]
}
